{"version":3,"sources":["redux/session/sessionActionType.js","redux/group/groupActionType.js","components/SearchComponent/SearchComponent.jsx","components/GroupLinkBadge/GroupLinkBadge.jsx","components/GroupContainer/GroupContainer.jsx","redux/signin/signinActionType.js","components/TopNav/TopNav.jsx","components/CustomComment/CustomComment.jsx","redux/post/postActionType.js","components/CommentContainer/CommentContainer.jsx","components/Action/Like.jsx","components/Action/Dislike.jsx","components/Action/CommentBtn.jsx","components/NewFeedPost/NewFeedPost.jsx","components/WritePost/WritePost.jsx","components/TitleGroup/TitleGroup.jsx","redux/error/errorActionType.js","redux/notification/notificationActionType.js","components/MainContainer/MainContainer.jsx","components/Home/Home.jsx","components/LoginGoogle/LoginGoogle.jsx","components/Login/Login.jsx","components/CreateUser/CreateUser.jsx","components/ManageUser/ManageUser.jsx","components/AdminContainer/AdminContainer.jsx","socketClient.js","components/Admin/Admin.jsx","components/Profile/Profile.jsx","components/TypeSearchLinkBadge/TypeSearchLinkBadge.jsx","components/TypeSearchContainer/TypeSearchContainer.jsx","components/TitleSearch/TitleSearch.jsx","redux/search/searchActionType.js","components/SearchPost/SearchPost.jsx","components/SearchGroup/SearchGroup.jsx","components/SearchPeople/SearchPeople.jsx","components/SearchContainer/SearchContainer.jsx","components/MainSearch/MainSearch.jsx","components/Search/Search.jsx","components/Route/PrivateRoute.jsx","components/Route/PublicRoute.jsx","components/Route/AdminRoute.jsx","components/Root/Root.jsx","App.js","reportWebVitals.js","redux/session/sessionReducer.js","redux/signin/signinReducer.js","redux/group/groupReducer.js","redux/post/postReducer.js","redux/error/errorReducer.js","redux/notification/notificationReducer.js","redux/search/searchReducer.js","utils/axios.manual.js","saga/sessionSaga.js","saga/signinSaga.js","saga/groupSaga.js","saga/rootSaga.js","redux/store.js","index.js"],"names":["SET_SESSION","CLEAR_SESSION","FETCHING_SESSION","KEEP_SESSION","SET_GROUP","LIST_GROUP_FAILED","LIST_GROUP_SUCCESS","FETCH_LOCATION","SET_LOCATION_FAILED","SET_LOCATION_SUCCESS","SearchComponent","props","Search","Input","useState","state","setState","history","useHistory","useRouteMatch","url","useParams","query","filter","useEffect","search","decodeURIComponent","allowClear","width","value","onSearch","encodeURIComponent","replace","push","placeholder","onChange","event","target","GroupLinkBadge","useSelector","session","socket","user","listGroup","groups","emit","idGroup","_id","idUser","on","belongToGroup","count","length","console","log","name","map","group","post","style","margin","maxWidth","minWidth","cursor","className","to","display","borderRadius","color","backgroundColor","fontWeight","padding","activeStyle","GroupContainer","dispatch","useDispatch","title","once","type","payload","border","borderTop","maxHeight","overflowY","dataSource","renderItem","item","SIGN_IN","SIGN_IN_GOOGLE","SIGN_OUT","SIGN_IN_START","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","TopNav","styles","center","justifyContent","alignItems","unsetGroup","currentGroup","onAdmin","onLogout","xs","sm","height","HomeOutlined","onClick","overlay","placement","DeploymentUnitOutlined","NotificationOutlined","UserOutlined","role","SettingOutlined","marginBottom","CustomComment","data","author","owner","avatar","image","src","paddingBottom","fontSize","textTransform","content","datetime","moment","createdAt","fromNow","React","memo","MAKING_POST","REACT_POST","PUSH_NEW_POST","FETCH_MORE_POST","FETCH_MORE_POST_START","FETCH_MORE_POST_SUCCESS","FETCH_MORE_POST_FAILURE","FETCH_POST","FETCH_POST_START","FETCH_POST_SUCCESS","FETCH_POST_FAILURE","CommentContainer","containerState","setContainerState","posts","belongToPost","postId","comment","setComment","listComments","setListComments","footer","onFieldsChange","changedFields","allFields","forEach","field","prev","loading","isShow","comments","outline","moreComments","includes","slice","flex","Item","rules","required","message","TextArea","autoSize","minRows","maxRows","htmlType","error","itemLayout","Like","like","found","find","userId","undefined","LikeOutlined","LikeTwoTone","Dislike","dislike","DislikeOutlined","DislikeTwoTone","CommentBtn","cmtCounter","CommentOutlined","Meta","Card","Paragraph","Typography","NewFeedPost","slider","useRef","onReact","reaction","id","reactedPost","response","actions","likes","dislikes","ArrowRightOutlined","format","userSelect","Grid","hoverable","ellipsis","rows","expandable","symbol","ref","index","LeftOutlined","current","next","onSelect","RightOutlined","obj","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","WritePost","setContent","visible","setVisible","confirmLoading","setConfirmLoading","setModalText","textAreaRefSubmit","Form","useForm","form","openModal","secondToGo","modal","Modal","success","info","timer","setInterval","setTimeout","clearInterval","destroy","offModal","resetFields","writePost","a","all","fileList","originFileObj","listFiles","handleCancel","previewVisible","previewImage","previewTitle","handlePreview","preview","substring","lastIndexOf","uploadButton","PlusOutlined","marginTop","bodyStyle","closable","onCancel","top","click","manageGroup","bordered","e","hidden","listType","onPreview","alt","Title","greeting","PUSH_ERROR","CLEAR_ERROR","PUSH_MESS","CLEAR_MESS","MainContainer","location","mess","setGreeting","flexDirection","isFetching","indicator","LoadingOutlined","spin","Home","useLocation","pathname","split","LoginGoogle","onSuccess","profileObj","clientId","buttonText","onFailure","cookiePolicy","Header","Layout","Footer","Content","Sider","Login","isMobile","deviceType","remember","username","password","initialValues","onFinish","values","me","submit","onFinishFailed","errorFields","outOfDate","label","prefix","min","max","Password","LockOutlined","valuePropName","CreateUser","Radio","Group","Button","axios","code","onCheckedGroupChange","checked","indexOf","get","then","span","ManageUser","manageUser","users","selectedUser","isModalVisible","setIsModalVisible","handleOk","onDeleteUser","list","ActionButton","marginLeft","showModal","AdminContainer","ghost","onBack","window","back","extra","INIT_SOCKET","TERMINATE_SOCKET","STORE_SOCKET","UPLOAD_IMAGE","Admin","Profile","uploadModalVisible","setUploadModalVisible","changePasswordVisible","setChangePasswordVisible","confirmUploadImageLoading","setConfirmUploadImageLoading","email","newPassword","key","uploadImageToSocket","updateProfile","onMessage","onProccessing","announcement","duration","uid","status","cover","join","UploadOutlined","description","textAlign","readOnly","onOk","uploadImage","iconRender","EyeTwoTone","EyeInvisibleOutlined","TypeSearchLinkBadge","TypeSearchContainer","SEARCH_POSTS","SEARCH_GROUPS","SEARCH_PEOPLE","SEARCH_START","SEARCH_SUCCESS","SEARCH_FAILURE","SearchPost","SearchGroup","SearchPeople","SearchContainer","results","SearchItemType","people","charAt","toUpperCase","MainSearch","searchQuery","ProtectedRoute","Component","component","rest","spinning","size","PublicRoute","AdminRoute","Root","path","exact","App","PrivateRoute","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","jwt","isLoading","fetchError","skip","create","baseURL","process","headers","workerClearSession","workerFetchSession","watchSession","action","call","context","localStorage","fn","removeItem","put","getItem","Error","takeLatest","workerSigninLocal","workerSigninGoogle","watchSignin","setItem","imageUrl","workerListGroup","watchGroups","takeEvery","rootSaga","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","signin","sortedPost","sort","b","Date","parse","updatedAt","updatedPosts","store","createStore","applyMiddleware","storeAPI","getState","handshake","auth","io","disconnect","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1ade127.chunk.js","sourcesContent":["// export const GET_JWT_LOCAL_STORAGE = \"GET_JWT_LOCAL_STORAGE\"\r\n// export const SET_JWT_LOCAL_STORAGE = \"SET_JWT_LOCAL_STORAGE\"\r\n// export const CLEAR_JWT_LOCAL_STORAGE = \"CLEAR_JWT_LOCAL_STORAGE\"\r\n\r\n// export const GET_JWT = \"GET_JWT\"\r\n// export const SET_JWT = \"SET_JWT\"\r\n// export const CLEAR_JWT = \"CLEAR_JWT\"\r\n\r\n// export const KEEP_SESSION = \"KEEP_SESSION\"\r\n\r\n// export const FETCH_SESSION = 'FETCH_SESSION'\r\n// export const FETCH_SESSION_START = 'FETCH_SESSION_START'\r\n// export const FETCH_SESSION_SUCCESS = 'FETCH_SESSION_SUCCESS'\r\n// export const FETCH_SESSION_FAILURE = 'FETCH_SESSION_FAILURE'\r\n\r\n// export const FETCH_GOOGLE_SESSION = 'FETCH_GOOGLE_SESSION'\r\n// export const FETCH_GOOGLE_SESSION_START = 'FETCH_GOOGLE_SESSION_START'\r\n// export const FETCH_GOOGLE_SESSION_SUCCESS = 'FETCH_GOOGLE_SESSION_SUCCESS'\r\n// export const FETCH_GOOGLE_SESSION_FAILURE = 'FETCH_GOOGLE_SESSION_FAILURE'\r\n\r\n\r\n\r\nexport const SET_SESSION = \"SET_SESSION\"        // trigger after login success\r\nexport const CLEAR_SESSION = \"CLEAR_SESSION\"    //trigger after logout\r\nexport const FETCHING_SESSION = \"FETCHING_SESSION\"\r\n\r\n//use in saga\r\nexport const KEEP_SESSION = \"KEEP_SESSION\"      // trigger after refresh page\r\n","export const LIST_GROUP = \"LIST_GROUP\"\r\nexport const SET_GROUP = \"SET_GROUP\"\r\n\r\nexport const LIST_GROUP_FAILED = \"LIST_GROUP_FAILED\"\r\nexport const LIST_GROUP_SUCCESS = \"LIST_GROUP_SUCCESS\"\r\n\r\nexport const FETCH_LOCATION = \"FETCH_LOCATION\"\r\nexport const SET_LOCATION_FAILED = \"SET_LOCATION_FAILED\"\r\nexport const SET_LOCATION_SUCCESS = \"SET_LOCATION_SUCCESS\"","import React, { useState, useEffect, } from 'react';\r\nimport { Input } from 'antd'\r\nimport { \r\n    useHistory, \r\n    useRouteMatch, \r\n    useParams,\r\n} from 'react-router-dom'\r\n\r\nfunction SearchComponent(props) {\r\n    const { Search } = Input\r\n    const [state, setState] = useState(\"\")\r\n    const history = useHistory()\r\n    const { url } = useRouteMatch();\r\n    const { query, filter } = useParams()\r\n\r\n    const onSearch = () => {\r\n        if (state) {\r\n            const search = encodeURIComponent(state.replace(\"%\", \"%25\")).replace(\"'\", \"%27\")\r\n            history.push(`/search/all/${search}`)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (filter && query) {\r\n            \r\n            const search = decodeURIComponent(query)\r\n            setState(search)\r\n        }\r\n    }, [ query ])\r\n\r\n    return (\r\n        <Search \r\n            allowClear \r\n            width={100} \r\n            value={state}\r\n            onSearch={onSearch} \r\n            placeholder=\"search...\" \r\n            onChange={(event) => setState(event.target.value)}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SearchComponent;","import React, { useState, useEffect,} from 'react';\r\nimport { Badge } from \"antd\"\r\nimport { useSelector, } from \"react-redux\"\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\"\r\n\r\nfunction GroupLinkBadge(props) {\r\n\r\n    const [state, setState] = useState(0)\r\n    const { socket, user, } = useSelector(state => state.session)\r\n    const { listGroup, } = useSelector(state => state.groups)\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.emit(\"client-get-unread-posts\", { idGroup : props._id, idUser: user._id })\r\n            socket.on(\"server-send-unread-posts\", ({ idGroup: belongToGroup, count }) => {\r\n                if (count.length > 0 && belongToGroup === props._id) {\r\n                    console.log(\"unread count\", props.name, count)\r\n                    setState(count.length)\r\n                    const groups = listGroup.map(group =>{\r\n                        let posts = count.filter(post => post.belongToGroup === props._id)\r\n                        return {\r\n\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }, [socket, props])\r\n\r\n    return (\r\n        <div style={{margin: \"0.5em\", maxWidth: \"200px\", minWidth: \"150px\", cursor: \"pointer\"}}>\r\n            <Badge \r\n                className=\"group-badge\"\r\n                count={state}\r\n                // count={2}\r\n                // count={props.count}\r\n                >\r\n                <NavLink \r\n                    to={`/group/${props._id}`} \r\n                    style = {{\r\n                        display: \"inline-block\",\r\n                        borderRadius: \"1em\",\r\n                        color: \"black\",\r\n                        backgroundColor: \"#95cbff\",\r\n                        fontWeight: \"bold\",\r\n                        padding: \"1em\",\r\n                    }}\r\n                    activeStyle={{\r\n                        backgroundColor: \"#187cdc\",\r\n                        color: \"white\"\r\n                    }}\r\n                >   \r\n                    {props.name}\r\n                </NavLink>\r\n            </Badge>    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroupLinkBadge;","import React, { useEffect, } from 'react';\r\nimport { List, Divider } from \"antd\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {\r\n    LIST_GROUP,\r\n    LIST_GROUP_SUCCESS,\r\n} from \"../../redux/group/groupActionType\"\r\nimport {\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport GroupLinkBadge from \"../GroupLinkBadge/GroupLinkBadge\"\r\n\r\nimport \"./GroupContainer.scss\"\r\nfunction GroupContainer(props) {\r\n\r\n    const { socket, user, } = useSelector(state => state.session)\r\n    const { listGroup } = useSelector(state => state.groups)\r\n    const dispatch = useDispatch();\r\n\r\n    const title = props.title || false\r\n\r\n    useEffect( () => {\r\n        // dispatch({ type: LIST_GROUP })\r\n        if(socket) {\r\n            socket.emit(\"client-get-list-groups\")\r\n            socket.once(\"server-send-list-groups\", ({listGroup}) =>{\r\n                if (listGroup.length > 0) {\r\n                    dispatch({ type: LIST_GROUP_SUCCESS , payload: { listGroup }})\r\n\r\n                }\r\n            })\r\n        }\r\n    }, [socket])\r\n\r\n    return (\r\n        <div style={ title ? { \r\n            backgroundColor : \"white\", \r\n            // padding:\"1em\", \r\n            border: \"2px solid #eeeeee\",\r\n            borderTop: \"none\",\r\n            borderRadius: \"0 0 10px 10px\",\r\n\r\n        } : null}>\r\n            {title && <div style={{padding : \"0 1em\"}}> <h3 >{title}</h3> <Divider /> </div> }\r\n            <List \r\n                style = {{ maxHeight : \"calc(100vh - 99px - 72px)\", overflowY: \"scroll\", padding: \"0 1em\" }}\r\n                dataSource={listGroup}\r\n                renderItem={item => < GroupLinkBadge _id={item._id} name={item.name} count={item.count} key={item._id}/>}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroupContainer;","export const SIGN_IN = \"SIGN_IN\"\r\nexport const SIGN_IN_GOOGLE = \"SIGN_IN_GOOGLE\"\r\nexport const SIGN_OUT = \"SIGN_OUT\"\r\n\r\n\r\nexport const SIGN_IN_START = \"SIGN_IN_START\"\r\nexport const SIGN_IN_SUCCESS = \"SIGN_IN_SUCCESS\"\r\nexport const SIGN_IN_FAILURE = \"SIGN_IN_FAILURE\"\r\n\r\n\r\n\r\n// export const SIGN_IN_GOOGLE_START = \"SIGN_IN_GOOGLE_START\"\r\n// export const SIGN_IN_GOOGLE_SUCCESS = \"SIGN_IN_GOOGLE_SUCCESS\"\r\n// export const SIGN_IN_GOOGLE_FAILURE = \"SIGN_IN_GOOGLE_FAILURE\"","import React from 'react';\r\nimport { \r\n    Row, \r\n    Col,\r\n    Dropdown,\r\n    Divider,\r\n} from 'antd'\r\nimport { \r\n    HomeOutlined,\r\n    DeploymentUnitOutlined,\r\n    NotificationOutlined,\r\n    UserOutlined,\r\n    SettingOutlined\r\n} from '@ant-design/icons'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { \r\n    useHistory, \r\n    NavLink,\r\n    Link,\r\n\r\n} from \"react-router-dom\"\r\nimport {\r\n    SET_GROUP,\r\n} from \"../../redux/group/groupActionType\"\r\n\r\nimport SearchComponent from \"../SearchComponent/SearchComponent\"\r\nimport GroupContainer from \"../GroupContainer/GroupContainer\"\r\n\r\n// import { CLEAR_JWT } from \"../../redux/session/sessionActionType\"\r\nimport { SIGN_OUT } from '../../redux/signin/signinActionType';\r\n\r\nimport './TopNav.scss'\r\nfunction TopNav(props) {\r\n\r\n    const { user } = useSelector(state => state.session)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const styles={\r\n        center : {\r\n            display: \"flex\",\r\n            justifyContent : \"center\",\r\n            alignItems : \"center\"\r\n        }\r\n    }\r\n\r\n    const unsetGroup = ( _id, name ) => {\r\n        dispatch({type: SET_GROUP, payload: { currentGroup: {_id: null, name: null} }})\r\n    }\r\n\r\n    const onAdmin = () => {\r\n        unsetGroup( null, \"\" ) \r\n        \r\n        history.push(\"/admin\");\r\n    }\r\n\r\n    const onHome = () => {\r\n        unsetGroup( null, \"\" ) \r\n        \r\n        history.push(\"/\");\r\n    }\r\n\r\n    const onProfile = () => {\r\n        unsetGroup( null, \"\" ) \r\n\r\n        history.push(\"/me\")\r\n    }\r\n\r\n    const onLogout = () => {\r\n        console.log(`clicked Log out`)\r\n        dispatch({\r\n            type: SIGN_OUT\r\n        })\r\n        \r\n        if (!user) {\r\n            history.push(\"/login\")\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Row style={{padding: \"1em 1em 0 1em\"}} >\r\n                <Col xs={6}>\r\n                    <div className=\"logo\">\r\n                        <span>T</span>\r\n                        <span>D</span>\r\n                        <span>T</span>\r\n                        <span>zone</span>\r\n                    </div>\r\n                </Col>\r\n\r\n                {/* search for desktop */}\r\n                <Col xs={0} sm={10} > \r\n                    <SearchComponent />\r\n                </Col>\r\n                \r\n                {/* icon container */}\r\n                <Col xs={18} sm={8}  >\r\n                    <Row style={{height: \"100%\"}}>\r\n                        \r\n                        <Col xs={4} sm={0}></Col>\r\n                        {/*  */}\r\n                        <Col xs={4} sm={6} style={styles.center} > \r\n                            {/* <Link to=\"/\"> */}\r\n                                <HomeOutlined onClick={onHome}/>\r\n                            {/* </Link> */}\r\n                        </Col>\r\n                        \r\n                        {/* group icon for mobile */}\r\n                        <Col xs={4} sm={0} >\r\n                            <div className=\"mobile_group_icon\"> \r\n                                <Dropdown overlay={() => <GroupContainer title=\"Tổng Hợp\"/>} placement=\"bottomCenter\">   \r\n                                        <DeploymentUnitOutlined /> \r\n                                </Dropdown>\r\n                            </div>\r\n                        </Col>\r\n\r\n                        {/*  */}\r\n                        <Col xs={4} sm={6} style={styles.center} > \r\n                            <Dropdown overlay=\"Notification\" placement=\"bottomCenter\">\r\n                                <NotificationOutlined /> \r\n                            </Dropdown>\r\n                        </Col>\r\n\r\n                        {/*  */}\r\n                        <Col xs={4} sm={6} style={styles.center} >\r\n                            {/* <Link to=\"/profile\">  */}\r\n                                <UserOutlined onClick={onProfile} /> \r\n                            {/* </Link> */}\r\n                        </Col>\r\n\r\n                        <Col xs={4} sm={6} style={styles.center} > \r\n                            <Dropdown overlay={() => \r\n                                (\r\n                                    <div>\r\n                                        {\r\n                                            user.role === \"admin\"?\r\n                                                // <Link to=\"/admin\">\r\n                                                // </Link> \r\n                                                <div onClick={onAdmin}> Admin </div>\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                        <Link to=\"/setting\" style={{color: \"black\"}}>\r\n                                            Profile info\r\n                                        </Link>\r\n                                        <div onClick={onLogout}>\r\n                                            Logout here\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            } placement=\"bottomRight\">\r\n                                <SettingOutlined /> \r\n                            </Dropdown>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Col>\r\n            </Row>\r\n            \r\n            {/* search row for mobile */}\r\n            <div className=\"mobile_search\">\r\n                <SearchComponent />\r\n            </div>\r\n            <Divider style={{marginBottom : 0}} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TopNav;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { Comment, Avatar } from \"antd\";\r\n\r\nfunction CustomComment({ data }) {\r\n\r\n  const state = {}\r\n\r\n    console.log(data)\r\n\r\n    const like = () => {\r\n        if (!state.status === \"liked\") {\r\n            //start like\r\n            // call api  - ko lam socket de lay like number\r\n            // dua vao response de xem success hay fail\r\n        }\r\n    };\r\n    \r\n    const dislike = () => {\r\n        if (!state.status === \"disliked\") {\r\n            //start dislike\r\n        }\r\n    };\r\n\r\n    // const actions = [\r\n    //     <span onClick={like}>\r\n    //       {state.status === \"liked\" ? <LikeFilled /> : <LikeOutlined />}\r\n    //       <span className=\"comment-action\">{state.likeNumber}</span>\r\n    //     </span>,\r\n    //     <span onClick={dislike}>\r\n    //       {state.status === \"disliked\" ? <DislikeFilled /> : <DislikeOutlined />}\r\n    //       <span className=\"comment-action\">{state.dislikeNumber}</span>\r\n    //     </span>\r\n    //   ];\r\n\r\n    return (\r\n        <Comment\r\n            style={{padding: \"0 1em\", backgroundColor: '#f1f1f1', width: \"100%\", borderRadius: \"1em\"}}\r\n            // actions={actions}\r\n            author={<p>{ data.owner.name }</p>}\r\n            avatar={\r\n                data.owner.image \r\n                ? \r\n                <Avatar src={data.owner.image} /> \r\n                : \r\n                (<div style={{\r\n                    width: \"24px\",\r\n                    height: \"24px\",\r\n                    paddingBottom: \"5px\",\r\n                    borderRadius: \"12px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    color : \"red\",\r\n                    backgroundColor: \"orange\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"1em\",\r\n                    textTransform : \"uppercase\"\r\n                }}>{data.owner.name[0]}</div>)\r\n            }\r\n            content={\r\n                <p> { data.content } </p>\r\n            }\r\n            datetime={<span>{moment( data.createdAt ).fromNow(\"HH:mm DD-MM-YYYY\")}</span>}\r\n        />\r\n    );\r\n}\r\n\r\nexport default React.memo(CustomComment);","export const MAKING_POST = \"MAKING_POST\"\r\nexport const REACT_POST = \"REACT_POST\"\r\nexport const PUSH_NEW_POST = \"PUSH_NEW_POST\"\r\nexport const COMMENT_POST = \"COMMENT_POST\"\r\n\r\nexport const FETCH_MORE_POST = \"FETCH_MORE_POST\"  // USE IN socket saga\r\n\r\nexport const FETCH_MORE_POST_START = \"FETCH_MORE_POST_START\"  // USE IN REDUCER\r\nexport const FETCH_MORE_POST_SUCCESS = \"FETCH_MORE_POST_SUCCESS\"  // USE IN REDUCER\r\nexport const FETCH_MORE_POST_FAILURE = \"FETCH_MORE_POST_FAILURE\" \r\n \r\nexport const FETCH_POST = \"FETCH_POST\"\r\nexport const FETCH_POST_START = \"FETCH_POST_START\"\r\nexport const FETCH_POST_SUCCESS = \"FETCH_POST_SUCCESS\"\r\nexport const FETCH_POST_FAILURE = \"FETCH_POST_FAILURE\"","import React, { useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport { List, Form, Input, Button, Skeleton, Row, Col } from \"antd\";\r\n\r\nimport CustomComment from \"../CustomComment/CustomComment\";\r\nimport { COMMENT_POST } from \"../../redux/post/postActionType\"\r\n\r\nfunction CommentContainer({ containerState, setContainerState }) {\r\n\t\t\r\n\tconst { socket, user, } = useSelector(state => state.session)\r\n\tconst { posts, } = useSelector(state => state.posts)\r\n\tconst [ comment, setComment ] = useState({\r\n\t\tcontent: \"\", \r\n\t\tbelongToPost: containerState.postId,\r\n\t})\r\n\tconst [ listComments, setListComments ] = useState([])\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst onComment = () => {\r\n\t\tconsole.log(\"onComment\", containerState)\r\n\t\tconsole.log(\"comment\", comment)\r\n\t\tif (comment.content) {\r\n\t\t\tsocket.emit(\"client-comment-post\", { \r\n\t\t\t\towner: user._id, \r\n\t\t\t\tcontent: comment.content, \r\n\t\t\t\tbelongToPost: comment.belongToPost, \r\n\t\t\t})\r\n\t\t\tsetComment(prev => {return{\r\n\t\t\t\t...prev, \r\n\t\t\t\tcontent: \"\",\r\n\t\t\t}})\r\n\t\t}\r\n\t}\r\n\r\n    const onFieldsChange = (changedFields, allFields) => {\r\n        changedFields.forEach(field => {\r\n            setComment(prev=>{return{\r\n                ...prev,\r\n                [`${field.name[0]}`]: field.value\r\n            }})\r\n        })\r\n    }\r\n\r\n\tconst onLoadMore = () => {\r\n\t\tlet moreComments = containerState.comments.filter(comment => !listComments.includes(comment))\r\n\t\t\r\n\t\t// loading some part of list\r\n\t\tmoreComments = listComments.length >= moreComments.length ? moreComments.slice() : moreComments.slice(-moreComments.length/2)\r\n\t\t\r\n\t\tsetListComments([ ...moreComments, ...listComments,  ])\r\n\t}\r\n\r\n\tconst onCollapseList = () => {\r\n\t\tsetListComments([...containerState.comments.slice(-2)])\r\n\t}\r\n\r\n\tconst footer = (\r\n\t\t<Form \r\n\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\tonFieldsChange={onFieldsChange}\r\n\t\t>\r\n\t\t<Row>\r\n\t\t\t{!containerState.loading && containerState.isShow ? listComments.length < containerState.comments.length ?(\r\n\t\t\t<Button\r\n\t\t\t\tstyle={{\r\n\t\t\t\tmargin: \"10px 0\",\r\n\t\t\t\tborder: \"none\",\r\n\t\t\t\toutline: \"none\",\r\n\t\t\t\tpadding: 0\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={onLoadMore}\r\n\t\t\t>\r\n\t\t\t\tloading more\r\n\t\t\t</Button>\r\n\t\t\t) : (<Button\r\n\t\t\t\tstyle={{\r\n\t\t\t\tmargin: \"10px 0\",\r\n\t\t\t\tborder: \"none\",\r\n\t\t\t\toutline: \"none\",\r\n\t\t\t\tpadding: 0\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={onCollapseList}\r\n\t\t\t>\r\n\t\t\t\tcollapse comments\r\n\t\t\t</Button>\r\n\t\t\t) : null}\r\n\t\t</Row>\r\n\t\t<Row>\r\n\t\t\t<Col flex=\"4\">\r\n\t\t\t<Form.Item\r\n\t\t\t\tname=\"content\"\r\n\t\t\t\tvalue={comment.content}\r\n\t\t\t\trules={[{ required: true, message: \"Please input your comment\" }]}\r\n\t\t\t>\r\n\t\t\t\t<Input.TextArea\r\n\t\t\t\tautoSize={{ minRows: 1, maxRows: 2 }}\r\n\t\t\t\tplaceholder=\"Type your comment here! :)\"\r\n\t\t\t\t/>\r\n\t\t\t</Form.Item>\r\n\t\t\t</Col>\r\n\t\r\n\t\t\t<Col flex=\"1\">\r\n\t\t\t<Form.Item>\r\n\t\t\t\t<Button type=\"primary\" htmlType=\"button\" onClick={onComment}>\r\n\t\t\t\tComment\r\n\t\t\t\t</Button>\r\n\t\t\t</Form.Item>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t\t</Form>\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetListComments([...containerState.comments.slice(-2)])\r\n\t}, [ containerState ])\r\n\r\n\t// useEffect(() => {\r\n\t// \tconsole.log([ ...containerState.comments.filter(comment => !listComments.includes(comment)).splice(2) ])\r\n\t// }, [ listComments ])\r\n\r\n\treturn (\r\n\t<>\r\n\t\t{containerState.error && <p>Error: {containerState.error}</p>}\r\n\t\t<List\r\n\t\t\tstyle={{backgroundColor: \"white\", padding: \"0 1em 0 1em\"}}\r\n\t\t\tclassName=\"demo-loadmore-list\"\r\n\t\t\tloading={containerState.loading} //state.initLoading\r\n\t\t\titemLayout=\"horizontal\"\r\n\t\t\tfooter={footer}\r\n\t\t\tdataSource={listComments} //state.list\r\n\t\t\trenderItem={(item) => (\r\n\t\t\t\t<List.Item>\r\n\t\t\t\t\t<CustomComment data={item}/>\r\n\t\t\t\t</List.Item>\r\n\t\t\t)}\r\n\t\t/>\r\n\t</>\r\n\t);\r\n}\r\n\r\nexport default CommentContainer;","import React from 'react';\r\nimport { useSelector } from \"react-redux\"\r\nimport {\r\n    LikeOutlined,\r\n    LikeTwoTone\r\n} from \"@ant-design/icons\";\r\n\r\n\r\nfunction Like({ like, onClick }) {\r\n\r\n    const { user } = useSelector(state => state.session)\r\n    const found = like.find(userId => userId == user._id)\r\n\r\n    return (\r\n        <div  onClick={onClick}>\r\n            {\r\n                found === undefined ? \r\n                <LikeOutlined /> :\r\n                <LikeTwoTone />\r\n            } {like.length}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Like;","import React from 'react';\r\nimport { useSelector } from \"react-redux\"\r\n\r\n\r\nimport {\r\n    DislikeOutlined,\r\n    DislikeTwoTone\r\n} from \"@ant-design/icons\";\r\n\r\n\r\nfunction Dislike({ dislike, onClick }) {\r\n\r\n    const { user } = useSelector(state => state.session)\r\n    const found = dislike.find(userId => userId == user._id)\r\n\r\n    return (\r\n        <div onClick={onClick}>\r\n            {\r\n                found === undefined ? \r\n                <DislikeOutlined /> : \r\n                <DislikeTwoTone />\r\n            } {dislike.length}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dislike;","import React from 'react';\r\n\r\n\r\n\r\nimport {\r\n    CommentOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\n\r\nfunction CommentBtn({ cmtCounter, onClick }) {\r\n    return (\r\n        <div onClick={onClick}>\r\n            <CommentOutlined /> {cmtCounter}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentBtn;","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport moment from \"moment\"\r\n\r\nimport { Card, Avatar, Typography, Carousel, Image } from \"antd\";\r\nimport {\r\n  RightOutlined ,\r\n  LeftOutlined,\r\n  ArrowRightOutlined\r\n} from \"@ant-design/icons\";\r\nimport { NavLink, } from \"react-router-dom\"\r\n\r\nimport CommentContainer from \"../CommentContainer/CommentContainer\";\r\nimport Like from \"../Action/Like\"\r\nimport Dislike from \"../Action/Dislike\"\r\nimport CommentBtn from \"../Action/CommentBtn\"\r\n\r\nimport { REACT_POST } from \"../../redux/post/postActionType\"\r\nimport {\r\n    SET_GROUP,\r\n} from \"../../redux/group/groupActionType\"\r\n\r\nconst { Meta } = Card;\r\nconst { Paragraph } = Typography;\r\n\r\nfunction NewFeedPost({ post }) {\r\n\r\n    const [state, setState] = useState({\r\n        postId: post._id,\r\n        comments : [],\r\n        loading : false,\r\n        error : null,\r\n        isShow : false\r\n    });\r\n    const slider = useRef(null)\r\n\r\n    const { socket, user } = useSelector(state => state.session)\r\n    const dispatch = useDispatch()\r\n\r\n    const onReact = ( reaction ) => {\r\n        // console.log(reaction, \" post \", post.content)\r\n        socket.emit(\"client-react-post\", { id: post._id, user: user._id, reaction})\r\n    }\r\n\r\n    // const toGroup = (_id, name) => {\r\n        \r\n    //     dispatch({type: SET_GROUP, payload: { currentGroup: {_id, name} }})\r\n    // }\r\n/////////////////////////////////////////////////////////////// socket process here\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.once(\"server-send-react-post\", ({ error, post : reactedPost, postId }) => {\r\n                if (error && error !== null && postId == post._id) {\r\n                    console.log(error)\r\n                    setState({\r\n                        ...state, \r\n                        loading: false,\r\n                        error : error.message\r\n                    })\r\n                } else if (reactedPost && postId === post._id) {\r\n                    console.log(\"reacted post\", reactedPost)\r\n                    dispatch({ type: REACT_POST, payload: { reactedPost }})\r\n                }\r\n            })\r\n        }\r\n    }, [ post ])\r\n\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            ...state, \r\n            loading: true,\r\n            error : null\r\n        })\r\n        if (socket) {\r\n            socket.emit(\"client-req-cmt\", { postId : post._id })\r\n            socket.on(\"server-send-comment-list\", response => {\r\n                if(response.error && response.postId == post._id) {\r\n                    console.log(response.error.message)\r\n                    setState({\r\n                        ...state, \r\n                        loading: false,\r\n                        error : response.error.message\r\n                    })\r\n                } else if(response.comments && response.postId == post._id){\r\n                    // console.log(post._id, response.comments)\r\n                    setState({\r\n                        ...state, \r\n                        loading: false,\r\n                        comments : response.comments,\r\n                        error : null\r\n                    })\r\n                } \r\n                \r\n            })\r\n        }\r\n    }, [post._id])\r\n\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on(\"server-send-comment-post\", ({ error, comment, belongToPost}) => {\r\n                if (error !== null && error !== undefined && error) {\r\n                    console.log(\"error\", error.message)\r\n                }\r\n                if (comment && belongToPost === post._id ) {\r\n                    \r\n                    setState({\r\n                        ...state,\r\n                        comments : [comment, ...state.comments]\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }, [state])\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    return (\r\n        <div style={{ width: \"100%\", margin: \"1em 0\" }}>\r\n            <Card\r\n                style={{ width: \"100%\" }}\r\n                actions={[\r\n                    <Like onClick={() => onReact(\"likes\")} like={post.likes} />, \r\n                    <Dislike onClick={()=> onReact(\"dislikes\")} dislike={post.dislikes} />,\r\n                    <CommentBtn cmtCounter={state.comments.length} onClick={() => setState(prev => ({...prev, isShow : !prev.isShow}))} />\r\n                ]}\r\n            >\r\n                <Meta\r\n                    avatar={\r\n                        post.owner.image \r\n                        ? \r\n                        <Avatar src={post.owner.image} /> \r\n                        : \r\n                        (<div style={{\r\n                            width: \"32px\",\r\n                            height: \"32px\",\r\n                            paddingBottom: \"5px\",\r\n                            borderRadius: \"16px\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                            color : \"red\",\r\n                            backgroundColor: \"orange\",\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"1.5em\",\r\n                            textTransform : \"uppercase\"\r\n                        }}\r\n                        \r\n                        >{post.owner.name[0]}</div>)\r\n                    }\r\n                title={\r\n                    <p style={{ marginBottom: 0 }}>\r\n                        <b>\r\n                            {/* { post.owner.name }{post.belongToGroup && \r\n                                <span>\r\n                                    <ArrowRightOutlined /> {post.belongToGroup.name}\r\n                                    </span>\r\n                            } */}\r\n                            \r\n                            <NavLink \r\n                                style={{color: 'black'}}\r\n                                // onClick={() => toGroup(post.belongToGroup._id, post.belongToGroup.name)} \r\n                                to={`/user/${post.owner._id}`}>{post.owner.name}</NavLink>\r\n                            {post.belongToGroup && \r\n                                <span>\r\n                                    <ArrowRightOutlined /> \r\n                                    <NavLink \r\n                                        style={{color: 'black'}}\r\n                                        // onClick={() => toGroup(post.belongToGroup._id, post.belongToGroup.name)} \r\n                                        to={`/group/${post.belongToGroup._id}`}>{post.belongToGroup.name}</NavLink>\r\n                                </span>\r\n                            }\r\n                        </b>\r\n                        <br />\r\n                        <small>\r\n                            { moment(post.createdAt).format('hh:mm, Do MMMM YYYY') }\r\n                        </small>\r\n                    </p>\r\n                }\r\n                style={{ padding: \"1em\", userSelect:\"none\" }}\r\n                />\r\n\r\n\r\n                {/* content */}\r\n                <Card.Grid style={{ width: \"100%\", paddingBottom:0 }} hoverable={false}>\r\n\r\n                    <Paragraph ellipsis={{ rows: 3, expandable: true, symbol: \"more\" }}>\r\n                        {\r\n                            post.content\r\n                        }\r\n                    </Paragraph>\r\n                    \r\n                        \r\n                        <Carousel ref={slider}>\r\n                            {\r\n                                post.image.map((url, index) => (<Image \r\n                                    key= {index}\r\n                                    style={{ width: \"100%\" }}\r\n                                    src={url}\r\n                                />))\r\n                            }  \r\n                        </Carousel>\r\n                        <div style={{width: \"100%\", display:\"flex\", justifyContent:\"space-between\", padding:5}}>\r\n                            { post.image.length > 1 ?  <LeftOutlined onClick={() => slider.current.next()} onSelect={() => false} /> : null }\r\n                            { post.image.length > 1 ? (<RightOutlined onClick={() => slider.current.prev()} onSelect={() => false}/>) : null }\r\n                        </div>\r\n                \r\n                \r\n                </Card.Grid>\r\n            </Card>\r\n\r\n            {/* comment container*/}\r\n            {state.isShow && <CommentContainer containerState = {state} setContainerState = {(obj) => setState(obj)} />}\r\n        </div>\r\n  \r\n    );\r\n}\r\n\r\nexport default React.memo(NewFeedPost);","import React, { useState, useEffect, useRef, } from \"react\";\r\nimport { Modal, Card, Avatar, Form, Upload, Input, Button, } from \"antd\";\r\nimport { ControlOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  MAKING_POST,\r\n} from \"../../redux/post/postActionType\"\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    useParams,\r\n} from \"react-router-dom\";\r\n\r\nimport './WritePost.scss'\r\n\r\nfunction getBase64(file) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(file);\r\n\t\treader.onload = () => resolve(reader.result);\r\n\t\treader.onerror = (error) => reject(error);\r\n\t});\r\n}\r\n\r\nconst WritePost = ( props ) => {\r\n\t\r\n\tconst { Meta } = Card;\r\n\tconst { idGroup } = useParams(); \r\n\r\n\t// content section\r\n\tconst [content, setContent] = useState(\"\");\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [confirmLoading, setConfirmLoading] = useState(false);\r\n\tconst [modalText, setModalText] = useState(\"Content of the modal\");\r\n\tconst dispatch = useDispatch();\r\n\tconst { user } = useSelector(state => state.session)\r\n\tconst textAreaRefSubmit = useRef(null);\r\n\tconst [form] = Form.useForm();\r\n\r\n\tconst showModal = () => {\r\n\t\tsetVisible(true);\r\n\t};\r\n\r\n\tfunction openModal(message, type=\"success\", secondToGo = 3) {\r\n        \r\n        let modal = null;\r\n\t\tif (type === \"success\") {\r\n\t\t\tmodal = Modal.success({\r\n\t\t\t\ttitle: \"Thông báo\",\r\n\t\t\t\tcontent: message,\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tmodal = Modal.info({\r\n\t\t\t\ttitle: \"Cảnh báo\",\r\n\t\t\t\tcontent: message,\r\n\t\t\t})\r\n\t\t}\r\n        \r\n        const timer = setInterval(() =>{\r\n            secondToGo -= 1;\r\n            // modal.update\r\n        }, 1000)\r\n\r\n        setTimeout(() =>{\r\n            clearInterval(timer);\r\n            modal.destroy();\r\n        }, secondToGo * 1000);\r\n    }\r\n\r\n\tconst offModal = () => {\r\n\t\tsetContent(\"\")\r\n\t\tsetVisible(false);\r\n\t\t// clear validate message\r\n\t\tform.resetFields();\r\n\t\tsetConfirmLoading(false);\r\n\t}\r\n\r\n\tconst writePost = (belongToGroup) => {\r\n\t\tsetTimeout(async () => {\r\n\t\t\t\t\r\n\t\t\tconst listFiles = await Promise.all([...state.fileList.map(async file => \r\n\t\t\t\tawait getBase64(file.originFileObj))])\r\n\t\t\tconst post = {\r\n\t\t\t\tcontent,\r\n\t\t\t\tfileList: listFiles,\r\n\t\t\t\tbelongToGroup,\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tdispatch({ type: MAKING_POST, payload: post})\r\n\t\t\toffModal()\r\n\t\t}, 2000);\r\n\t}\r\n\r\n\tconst handleOk = () => {\r\n\t\t\r\n\t\t// validation for non text in textArea\r\n\t\ttextAreaRefSubmit.current.click()\r\n\t\tif (content !== \"\") {\r\n\r\n\t\t\tsetModalText(\"The modal will be closed after two seconds\");\r\n\t\t\tsetConfirmLoading(true);\r\n\t\t\tconst belongToGroup = idGroup !== \"\" && idGroup !== undefined ? idGroup : null\r\n\t\t\tconsole.log(\"test belongToGroup\", belongToGroup)\r\n\t\t\tif (belongToGroup === null) {\r\n\t\t\t\twritePost(belongToGroup)\r\n\t\t\t\topenModal(\"Đăng bài lên tường thành công\")\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tif (user.role === \"admin\") {\r\n\t\t\t\t\twritePost(belongToGroup)\r\n\t\t\t\t\topenModal(\"Đăng thông báo thành công\")\r\n\t\t\t\t\t\r\n\t\t\t\t} else if (user.role !== \"admin\" && user.manageGroup.includes(belongToGroup)) {\r\n\t\t\t\t\twritePost(belongToGroup)\r\n\t\t\t\t\topenModal(\"Đăng thông báo thành công\")\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\toffModal()\r\n\t\t\t\t\topenModal(\"Bạn không có quyền đăng bài\", \"info\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleCancel = () => {\r\n\t\t// console.log(\"Clicked cancel button\");\r\n\t\tsetVisible(false);\r\n\t\tform.resetFields();\r\n\t};\r\n\r\n\t// upload section\r\n\tconst [state, setState] = useState({\r\n\t\tpreviewVisible: false,\r\n\t\tpreviewImage: \"\",\r\n\t\tpreviewTitle: \"\",\r\n\t\tfileList: []\r\n\t});\r\n\r\n\tconst handlePreview = async (file) => {\r\n\t\tif (!file.url && !file.preview) {\r\n\t\tfile.preview = await getBase64(file.originFileObj);\r\n\t\t}\r\n\r\n\t\tsetState({\r\n\t\t...state,\r\n\t\tpreviewImage: file.url || file.preview,\r\n\t\tpreviewVisible: true,\r\n\t\tpreviewTitle:\r\n\t\t\tfile.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = ({ fileList }) => setState({ ...state, fileList });\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t<PlusOutlined />\r\n\t\t<div style={{ marginTop: 8 }}>Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\t// useEffect(() => {\r\n\t// \tconsole.log(\"idGroup\", idGroup)\r\n\t// },[])\r\n\r\n\treturn (\r\n\t\t<> \r\n\t\t\t{/* trigger component */}\r\n\t\t{/* <Button type=\"primary\" onClick={showModal}>\r\n\t\t\tOpen Modal with async logic\r\n\t\t</Button> */}\r\n\t\t\t<div className=\"write-post\">\r\n\t\t\t\t<Avatar src={ user.image } />\r\n\t\t\t\t<div className=\"write-post__title\" onClick={showModal} >\r\n\t\t\t\t\tCó điều gì mới không? :)\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t{/* modal .... */}\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Tạo bài viết\"\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tbodyStyle={{ padding: \"1em\" }}\r\n\t\t\t\tclosable={true}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\tstyle={{ top: 30 }}\r\n\t\t\t\tfooter={[\r\n\t\t\t\t\t<Button key=\"submit\" type=\"primary\" loading={confirmLoading} onClick={handleOk}>\r\n\t\t\t\t\t\tĐăng bài\r\n\t\t\t\t\t</Button>,\r\n\t\t\t\t\t<Button key=\"back\" onClick={handleCancel}>\r\n\t\t\t\t\t\tĐóng\r\n\t\t\t\t\t</Button>,\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<Card style={{ width: \"100%\" }} bordered={false}>\r\n\t\t\t\t<Meta\r\n\t\t\t\t\tavatar={\r\n\t\t\t\t\t<Avatar src={ user.image } />\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttitle={user.name}\r\n\t\t\t\t/>\r\n\t\t\t\t<Card.Grid hoverable={false} style={{ width: \"100%\" }}>\r\n\t\t\t\t\t<Form form={form}>\r\n\t\t\t\t\t\t<Form.Item \r\n\t\t\t\t\t\t\tname=\"content\" \r\n\t\t\t\t\t\t\trules={[{ required: true, message: 'Vui lòng viết gì đó' },]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input.TextArea\r\n\t\t\t\t\t\t\t\tplaceholder=\"Viết gì đó...\"\r\n\t\t\t\t\t\t\t\tautoSize={{ minRows: 3 }}\r\n\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\tvalue={content}\r\n\t\t\t\t\t\t\t\tonChange={e => setContent(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item hidden={true}>\r\n\t\t\t\t\t\t\t<Button ref={textAreaRefSubmit} type=\"submit\" htmlType=\"submit\"/>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tfileList={state.fileList}\r\n\t\t\t\t\t\t\t\tonPreview={handlePreview}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\t\tvisible={state.previewVisible}\r\n\t\t\t\t\t\t\t\ttitle={state.previewTitle}\r\n\t\t\t\t\t\t\t\tfooter={null}\r\n\t\t\t\t\t\t\t\tonCancel={() => setState({ ...state, previewVisible: false })}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\talt=\"example\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t\t\t\t\t\tsrc={state.previewImage}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Grid>\r\n\t\t\t\t</Card>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WritePost;\r\n","import React from 'react';\r\nimport \"./TitleGroup.scss\"\r\nexport default function Title ({ name, greeting }) {\r\n    return (\r\n        <div className = \"title-group\">\r\n            {name} {greeting}\r\n        </div>\r\n    )\r\n}","export const PUSH_ERROR = \"PUSH_ERROR\"\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\"","export const PUSH_MESS = \"PUSH_MESS\"\r\nexport const CLEAR_MESS = \"CLEAR_MESS\"\r\n","import React, { useState, useEffect, useContext, } from 'react';\r\nimport {useSelector, useDispatch } from \"react-redux\"\r\nimport {\r\n    useParams,\r\n} from \"react-router-dom\";\r\n\r\nimport { Divider, Row, Spin, message } from \"antd\"\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport GroupContainer from \"../GroupContainer/GroupContainer\"\r\nimport NewFeedPost from \"../NewFeedPost/NewFeedPost\"\r\nimport WritePost from \"../WritePost/WritePost\"\r\nimport TitleGroup from \"../TitleGroup/TitleGroup\"\r\n\r\nimport { CLEAR_ERROR } from \"../../redux/error/errorActionType\"\r\nimport { FETCH_MORE_POST } from '../../redux/post/postActionType';\r\n\r\nimport \"./MainContainer.scss\"\r\nimport { CLEAR_MESS } from '../../redux/notification/notificationActionType';\r\n\r\nfunction MainContainer( props ) {\r\n\r\n    const { location } = useSelector(state => state.groups)\r\n    const { user } = useSelector(state => state.session)\r\n    const { posts, error, mess } = useSelector(state => state)\r\n\r\n    const dispatch = useDispatch()\r\n    const [greeting, setGreeting] = useState(\"\")\r\n    useEffect(() => {\r\n    \r\n        if(location){\r\n            if(location.type === \"g\"){\r\n                setGreeting(`${location.name} xin chào!`)\r\n            } else if (location.type === \"n\"){\r\n                setGreeting(`Chào ${user.name}! Newfeed của bạn có điều mới đấy!`)\r\n            } else if (location.type === \"u\"){\r\n                setGreeting(`Đây là dòng thời gian của ${location.name}`)\r\n            }\r\n        }\r\n        console.log(greeting)\r\n    }, [location])\r\n\r\n    useEffect(() => {\r\n        if(error.content){\r\n            message.error(error.content)\r\n            dispatch({ type: CLEAR_ERROR })\r\n        }\r\n    }, [error])\r\n\r\n    useEffect(() => {\r\n        if(mess.content){\r\n            message.success(mess.content)\r\n            dispatch({ type : CLEAR_MESS })\r\n        }\r\n    }, [mess.content])\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            {/* left nav link for desktop */}\r\n            <div className=\"main__left\">\r\n                <div className=\"main__left__title\">\r\n                    <h3>Tổng Hợp</h3>\r\n                    <Divider />\r\n                </div>\r\n                <GroupContainer />\r\n            </div>\r\n            \r\n            <div className=\"main__right\">\r\n\r\n                {\r\n                    \r\n                    (<Row style={{\r\n                        display: \"flex\", \r\n                        flexDirection: \"row\", \r\n                        justifyContent: \"center\", \r\n                        alignItems: \"center\",\r\n                    }}>\r\n                        <TitleGroup greeting={ greeting } />\r\n                    </Row>)\r\n                        \r\n                }\r\n                {/* write post */}\r\n                <Row style={{\r\n                    display: \"flex\", \r\n                    flexDirection: \"column\", \r\n                    justifyContent: \"center\", \r\n                    alignItems: \"center\",\r\n                \r\n                }}>\r\n                    <WritePost  />\r\n                </Row>\r\n\r\n                {/* posts here */}\r\n                <Row style={{\r\n                    display: \"flex\", \r\n                    flexDirection: \"column\", \r\n                    justifyContent: \"center\", \r\n                    alignItems: \"center\",\r\n                \r\n                }}>\r\n                    {\r\n                        posts.posts.map((post) => \r\n                            <div className=\"post\" key={post._id} >\r\n                                <NewFeedPost post={post}  />\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                    {\r\n                        posts.isFetching ? \r\n                        (<Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} />) : \r\n                        (\r\n                            <p className=\"load-more\" onClick={ () => dispatch({ \r\n                                type : FETCH_MORE_POST,\r\n                                payload : { location : props.location }\r\n                            })}> \r\n                                load more \r\n                            </p>\r\n                        )\r\n                    }\r\n               </Row>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainContainer;","import React, { useEffect, } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {\r\n    useParams,\r\n    useLocation\r\n} from \"react-router-dom\";\r\n\r\nimport TopNav from \"../TopNav/TopNav.jsx\"\r\nimport MainContainer from \"../MainContainer/MainContainer\"\r\n\r\nimport { FETCH_POST } from \"../../redux/post/postActionType\"\r\nimport { FETCH_LOCATION } from '../../redux/group/groupActionType.js';\r\n\r\nexport default function Home(props) {\r\n    \r\n    const dispatch = useDispatch()\r\n    const { socket, user } = useSelector(state => state.session)\r\n\r\n    const { idGroup } = useParams()\r\n    const { idUser } = useParams()\r\n    const url = useLocation().pathname.split(\"/\")\r\n\r\n    let location = {} //query condition\r\n    if(idGroup){\r\n        location = { belongToGroup : idGroup }\r\n    }\r\n\r\n    if(idUser){\r\n        location = { owner : idUser }\r\n    }\r\n\r\n    if(url[1] === \"me\"){\r\n        location = { owner : user._id, belongToGroup: null }\r\n        \r\n    }\r\n    useEffect(() => {\r\n        ////////////////////////////////////////////////////////////////////// init post here\r\n        console.log(location)\r\n        if(socket){\r\n            dispatch({\r\n                type : FETCH_LOCATION, payload : { location }\r\n            })\r\n            dispatch({\r\n                type: FETCH_POST, payload: { location }\r\n            })\r\n            \r\n        }\r\n        \r\n        //////////////////////////////////////////////////////////////////////\r\n    }, [location])\r\n    \r\n    return (\r\n        <div>\r\n            <TopNav />\r\n            <MainContainer location={location} />\r\n        </div>\r\n    )\r\n}","import React, { useEffect, } from 'react';\r\nimport { \r\n    GoogleLogin, \r\n} from 'react-google-login';\r\nimport { useDispatch, } from \"react-redux\"\r\n\r\nimport { SIGN_IN_GOOGLE } from \"../../redux/signin/signinActionType\"\r\n\r\nexport default function LoginGoogle () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSuccess = async (response) => {\r\n        console.log(`onSuccess login with Google`);\r\n        const user = response?.profileObj\r\n        \r\n        console.log(\"login gg\", user)\r\n        \r\n        try {\r\n            dispatch({ type: SIGN_IN_GOOGLE, payload: { user }})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    \r\n    const onFailure = (response) => {\r\n        console.log(`onFailure login with Google`);\r\n        console.log(response)\r\n    }\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <GoogleLogin\r\n                clientId=\"446368611163-5i3vhh6mq7n1li3ep14eegjbk4ngd8q5.apps.googleusercontent.com\"\r\n                buttonText=\"Google\"\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                cookiePolicy={'single_host_origin'}\r\n                />\r\n        </div>\r\n        \r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Link,\r\n    useHistory\r\n} from 'react-router-dom'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Checkbox,\r\n    Layout,\r\n} from 'antd'\r\nimport {\r\n    DeploymentUnitOutlined,\r\n    UserOutlined, \r\n    LockOutlined,\r\n} from '@ant-design/icons'\r\nimport 'antd/dist/antd.css';\r\nimport { useSelector, useDispatch, } from \"react-redux\"\r\n\r\nimport './Login.scss'\r\n\r\nimport { SIGN_IN } from \"../../redux/signin/signinActionType\"\r\nimport LoginGoogle from \"../LoginGoogle/LoginGoogle\"\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nexport default function Login({ deviceType: isMobile}) {\r\n    \r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [state, setState] = useState({\r\n        remember: true,\r\n        username: \"admin\",\r\n        password: \"123\",\r\n\r\n    })\r\n\r\n    const initialValues = {\r\n        remember: state.remember,\r\n        username: state.remember? state.username : \"\",\r\n        password: state.remember? state.password : \"\",\r\n    }\r\n\r\n    const onFieldsChange = (changedFields, allFields) => {\r\n        changedFields.forEach(field => {\r\n            setState(prev=>{return{\r\n                ...prev,\r\n                [`${field.name[0]}`]: field.value\r\n            }})\r\n        })\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        console.log('onFinish');\r\n        console.log(values);\r\n        const { remember } = values;\r\n        const { submit, ...me } = values;\r\n        if (remember) {\r\n            console.log(\"Remember me\")\r\n            setState(me)\r\n        }\r\n\r\n        dispatch({ type: SIGN_IN, payload: { username: state.username, password: state.password }})\r\n    };\r\n    \r\n    const onFinishFailed = ({ values, errorFields, outOfDate }) => {\r\n        console.log('Failed: errorInfo');\r\n        console.log({ values, errorFields, outOfDate });\r\n    };\r\n    \r\n    return (\r\n        <Layout className=\"login-page\">\r\n                <Header>\r\n                    <div className=\"login-page__header\">\r\n                        <div className=\"login-page__header-icon\">\r\n                            <DeploymentUnitOutlined spin={false}/>\r\n                        </div>\r\n                        <div className=\"login-page__header-text\">\r\n                            <h4>Login</h4>\r\n                        </div>\r\n                    </div>\r\n                </Header>\r\n                <Content>\r\n                    <div className=\"login-page__body\">\r\n                    \r\n                        <div className=\"login-form\">\r\n                            \r\n                            <div className={!isMobile?\"login-form__body\":\"login-form__body-mobile\"}>\r\n                                <Form\r\n                                    initialValues={{...initialValues}}\r\n                                    onFieldsChange={onFieldsChange}\r\n                                    onFinish={onFinish}\r\n                                    onFinishFailed={onFinishFailed}\r\n                                >\r\n                                    <Form.Item\r\n                                        label=\"Username\"\r\n                                        name=\"username\"\r\n                                        rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your Username!',\r\n                                        },\r\n                                        ]}\r\n                                    >\r\n                                        <Input \r\n                                            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                                            value = {state.username}\r\n                                        />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Password\"\r\n                                        name=\"password\"\r\n                                        rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            type: 'string', \r\n                                            message: 'Please input your Password!',\r\n                                            min: 3,\r\n                                            max: 20,\r\n                                        },\r\n                                        ]}\r\n                                    >\r\n                                        <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />}/>\r\n                                    </Form.Item>\r\n\r\n                                    <div className=\"login-form__body-action\">\r\n\r\n                                            <div className=\"login-form__body-action-remember\">\r\n                                                <Form.Item \r\n                                                    name=\"remember\" \r\n                                                    valuePropName=\"checked\"\r\n                                                >\r\n                                                    <Checkbox>Remember me</Checkbox>\r\n                                                </Form.Item>\r\n                                            </div>\r\n                                            <div className=\"login-form__body-action-forgotPassword\">\r\n                                                <p>\r\n                                                    <Link to=\"/forgot\">Forgot password</Link>\r\n                                                </p>\r\n                                            </div>\r\n                                            <div className=\"login-form__body-action-submit\">                               \r\n                                                <Form.Item name=\"submit\">\r\n                                                    <Button type=\"primary\" htmlType=\"submit\">\r\n                                                        Submit\r\n                                                    </Button>\r\n                                                </Form.Item>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                </Form>\r\n                            </div>\r\n                            <div className=\"login-form__footer\">\r\n                                <div className=\"login-form__footer-action\">\r\n                                    {/* <Link to=\"/register\">Register now</Link> */}\r\n                                    <LoginGoogle/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Content>\r\n                <Footer>\r\n                    <div className=\"login-page__footer\">\r\n                        <p> Social Network © 2021 </p>\r\n                    </div>\r\n                </Footer>\r\n            </Layout>\r\n    )\r\n}","import React, { useState, useEffect, } from \"react\";\r\nimport { useSelector, useDispatch, } from \"react-redux\";\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Checkbox,\r\n    Row, \r\n    Col,\r\n    Modal,\r\n    Radio,\r\n} from 'antd'\r\nimport {\r\n    UserOutlined, \r\n    LockOutlined,\r\n} from '@ant-design/icons'\r\nimport axios from \"axios\"\r\n\r\nimport \"./CreateUser.scss\"\r\nexport default function CreateUser (){\r\n\r\n    const dispatch = useDispatch();\r\n    const { Group: RadioGroup, Button: RadioButton, } = Radio;\r\n\r\n    const [state, setState] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n        manageGroup: [],\r\n        groups: [],\r\n    })\r\n    const { groups, manageGroup } = state;\r\n\r\n    const initialValues = {\r\n        remember: state.remember,\r\n        username: state.remember? state.username : \"\",\r\n        password: state.remember? state.password : \"\",\r\n    }\r\n\r\n    const onFieldsChange = (changedFields, allFields) => {\r\n        changedFields.forEach(field => {\r\n            setState(prev=>{return{\r\n                ...prev,\r\n                [`${field.name[0]}`]: field.value\r\n            }})\r\n        })\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        let { submit, ...user } = values;\r\n        user = {...user, manageGroup }\r\n\r\n        const response = await axios.post (\"http://localhost:4000/users/\", user)\r\n        \r\n        if (response.data.code === 200) {\r\n            openModal(\"Tạo người dùng mới thành công.\");\r\n        }\r\n        else {\r\n            openModal(\"Tạo người dùng mới thất bại.\")\r\n        }\r\n    };\r\n    \r\n    const onFinishFailed = ({ values, errorFields, outOfDate }) => {\r\n        console.log('Failed: errorInfo');\r\n        console.log({ values, errorFields, outOfDate });\r\n    };\r\n\r\n    function onCheckedGroupChange(event) {\r\n        const { checked, value } = event.target;\r\n        setState(prev => {\r\n            return {\r\n                ...prev,\r\n                manageGroup:  checked? [...prev.manageGroup, value]\r\n                    :\r\n                    [...prev.manageGroup.filter(group =>!(group === value))]\r\n\r\n            }\r\n        })\r\n        console.log('checked = ', event);\r\n        console.log('manageGroup ', manageGroup);\r\n        console.log('value = ', manageGroup.indexOf(value));\r\n    }\r\n\r\n    function openModal(message, secondToGo = 3) {\r\n        \r\n        const modal = Modal.success({\r\n            title: \"Thông báo\",\r\n            content: message,\r\n        })\r\n        \r\n        const timer = setInterval(() =>{\r\n            secondToGo -= 1;\r\n            // modal.update\r\n        }, 1000)\r\n\r\n        setTimeout(() =>{\r\n            clearInterval(timer);\r\n            modal.destroy();\r\n        }, secondToGo * 1000);\r\n    }\r\n\r\n    useEffect( () => {\r\n        axios.get(\"http://localhost:4000/groups/\").then(response => {\r\n            if (response.data.code === 200) {\r\n                if (response.data.data !== state.groups)\r\n                {\r\n                    setState(prev => {\r\n                        return {\r\n                            ...prev,\r\n                            groups : response.data.data.map(group => {\r\n                                return {\r\n                                    _id: group._id,\r\n                                    name: group.name,\r\n                                }\r\n                            }),\r\n                        }\r\n                    })\r\n                    console.log(\"test\")\r\n                }\r\n            }\r\n            else {console.log(response.data.error)}\r\n        })\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"main-admin\">\r\n            <div className=\"main-admin__left\">\r\n                <h3 className=\"main-admin__title\">\r\n                    Create new user\r\n                </h3>\r\n                <div >\r\n                    <Form\r\n                        initialValues={{...initialValues}}\r\n                        onFieldsChange={onFieldsChange}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên người dùng!',\r\n                            },\r\n                            ]}\r\n                        >\r\n                            <Input \r\n                                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                                value = {state.username}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên đăng nhập người dùng!',\r\n                            },\r\n                            ]}\r\n                        >\r\n                            <Input \r\n                                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                                value = {state.username}\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            rules={[\r\n                            {\r\n                                required: true,\r\n                                type: 'string', \r\n                                message: 'Vui lòng nhập mật khẩu!',\r\n                                min: 3,\r\n                                max: 20,\r\n                            },\r\n                            ]}\r\n                        >\r\n                            <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />}/>\r\n                        </Form.Item>\r\n\r\n                        <div className=\"login-form__body-action\">\r\n                                {/* <div className=\"login-form__body-action-remember\">\r\n                                    <Form.Item \r\n                                        name=\"remember\" \r\n                                        valuePropName=\"checked\"\r\n                                    >\r\n                                        <Checkbox>Remember me</Checkbox>\r\n                                    </Form.Item>\r\n                                </div> */}\r\n                                {/* <div className=\"login-form__body-action-forgotPassword\">\r\n                                    <p>\r\n                                        <Link to=\"/forgot\">Forgot password</Link>\r\n                                    </p>\r\n                                </div> */}\r\n                                <small style={{padding: \"0.5em\"}}>Remeber to select group for new user!</small>\r\n                                <div className=\"login-form__body-action-submit\">                               \r\n                                    {/* <Form.Item>\r\n                                        <RadioGroup>\r\n                                            <Radiobutton value=\"\"></Radiobutton>\r\n                                        </RadioGroup>\r\n                                    </Form.Item> */}\r\n                                    <Form.Item name=\"submit\">\r\n                                        <Button type=\"primary\" htmlType=\"submit\">\r\n                                            Create\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n            <div className=\"main-admin__right\">\r\n                <h3 className=\"main-admin__title\">\r\n                    Select group(s) for your new user\r\n                </h3>\r\n                <div className=\"main-admin__right__list\">\r\n                { \r\n                    groups.map( group => {\r\n                        // console.log(\"manage group \", group)\r\n\r\n                        return (\r\n                            <Row key={group._id} className=\"main-admin__right__list__item\" >\r\n                                <Col span={8}>\r\n                                    <Checkbox \r\n                                        onChange={onCheckedGroupChange}\r\n                                        value={group._id}\r\n                                        checked={manageGroup.indexOf(group._id)>=0}\r\n                                        > \r\n                                        { group.name } \r\n                                    </Checkbox>\r\n                                </Col>\r\n                            </Row>\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect, } from \"react\";\r\nimport { useSelector, useDispatch, } from \"react-redux\";\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Row, \r\n    Col,\r\n    Modal,\r\n} from 'antd'\r\n\r\nimport \"./ManageUser.scss\"\r\nexport default function ManageUser (){\r\n\r\n    const { socket, } = useSelector(state => state.session)\r\n\r\n    const [state, setState] = useState({\r\n        manageUser: [],\r\n        users: [],\r\n        selectedUser: null,\r\n    })\r\n    const { users, manageUser } = state;\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const showModal = (_id) => {\r\n        setIsModalVisible(true);\r\n        setState(prev => {return{\r\n            ...prev, \r\n            selectedUser: _id,\r\n        }})\r\n    };\r\n\r\n    const handleOk = () => {\r\n        if (state.selectedUser) {\r\n            onDeleteUser(state.selectedUser)\r\n            setState(prev => {return{\r\n                ...prev, \r\n                selectedUser: null,\r\n            }})\r\n        }\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setState(prev => {return{\r\n            ...prev, \r\n            selectedUser: null,\r\n        }})\r\n        setIsModalVisible(false);\r\n    };\r\n    \r\n    function onCheckedGroupChange(event) {\r\n        const { checked, value } = event.target;\r\n        setState(prev => {\r\n            return {\r\n                ...prev,\r\n                // manageUser:  checked? [...prev.manageUser, value]\r\n                //     :\r\n                //     [...prev.manageUser.filter(group =>!(group === value))]\r\n                manageUser: checked? [value]: []\r\n\r\n            }\r\n        })\r\n        // console.log('checked = ', event);\r\n        // console.log('manageUser ', manageUser);\r\n        // console.log('value = ', manageUser.indexOf(value));\r\n    }\r\n\r\n    function openModal(message, secondToGo = 3) {\r\n        \r\n        const modal = Modal.success({\r\n            title: \"Thông báo\",\r\n            content: message,\r\n        })\r\n        \r\n        const timer = setInterval(() =>{\r\n            secondToGo -= 1;\r\n            // modal.update\r\n        }, 1000)\r\n\r\n        setTimeout(() =>{\r\n            clearInterval(timer);\r\n            modal.destroy();\r\n        }, secondToGo * 1000);\r\n    }\r\n\r\n    useEffect( () => {\r\n        if (socket) {\r\n            socket.emit(\"client-get-list-users\")\r\n            socket.on(\"server-send-list-users\", ({ list }) => {\r\n                if (list.length > 0) {\r\n                    console.log(\"admin list user\", list)\r\n                    setState(prev => {return{\r\n                        ...prev,\r\n                        users: list,\r\n                    }})\r\n                }\r\n            })\r\n            socket.once(\"server-send-admin-delete-user\", ({ message }) => {\r\n                if (message) openModal(message)\r\n            })\r\n\r\n        }\r\n    }, [socket, state.users])\r\n\r\n    const ActionButton = ({ _id }) => {\r\n        return (\r\n            <Button \r\n                style={{marginLeft: \"2em\"}}\r\n                type=\"danger\" \r\n                onClick={() => showModal(_id)}\r\n            >Xóa</Button>\r\n        )\r\n    }\r\n\r\n    const onDeleteUser = ( _id ) => {\r\n        socket.emit(\"client-request-admin-delete-user\", { _id })\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-admin\">\r\n            <div className=\"main-admin__right\">\r\n                <h3 className=\"main-admin__title\">\r\n                    Các Tài khoản phòng ban hoặc Khoa\r\n                </h3>\r\n                <div className=\"main-admin__right__list\">\r\n                { \r\n                    users.map( user => {\r\n                        return (\r\n                            <div>\r\n                                <Row key={user._id} className=\"main-admin__right__list__item\" >\r\n                                    <Col span={8}>\r\n                                        <Checkbox \r\n                                            onChange={onCheckedGroupChange}\r\n                                            value={user._id}\r\n                                            checked={manageUser.indexOf(user._id)>=0}\r\n                                        > \r\n                                            { user.name }{manageUser.indexOf(user._id)>=0 && <ActionButton _id={user._id} />}\r\n                                        </Checkbox>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Modal title=\"Xác nhận\" visible={isModalVisible}\r\n                                            footer={[\r\n                                                <Button key=\"submit\" type=\"danger\" onClick={handleOk}>\r\n                                                    Xác nhận\r\n                                                </Button>,\r\n                                                <Button key=\"back\" onClick={handleCancel}>\r\n                                                    Hủy bỏ\r\n                                                </Button>,\r\n                                            ]}>\r\n                                            <p>Bạn có thật sự muốn xóa tại khoản này?</p>\r\n                                        </Modal>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect, } from 'react';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { PageHeader, Button, Descriptions } from 'antd';\r\n\r\nimport CreateUser from \"../CreateUser/CreateUser\"\r\nimport ManageUser from \"../ManageUser/ManageUser\"\r\n\r\nimport \"./AdminContainer.scss\"\r\nexport default function AdminContainer () {\r\n\r\n    const [state, setState] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    return(\r\n        <div className=\"admin-container\">\r\n            <PageHeader\r\n                ghost={false}\r\n                onBack={() => window.history.back()}\r\n                title={state?\"Tạo mới tài khoản\":\"Quản lý tài khoản\"}\r\n                // subTitle=\"This is a subtitle\"\r\n                extra={[\r\n                    <Button key=\"create\" onClick={()=>setState(prev => !prev)} type={state?\"primary\":\"default\"}>\r\n                        Tạo mới tài khoản\r\n                    </Button>,\r\n                    <Button key=\"manage\" onClick={()=>setState(prev => !prev)} type={!state?\"primary\":\"default\"}>\r\n                        Quản lý tài khoản\r\n                    </Button>,\r\n                ]}\r\n            >\r\n                {state && <CreateUser />}\r\n                {!state && <ManageUser />}\r\n            </PageHeader>\r\n        </div>\r\n    )\r\n}","import { io } from 'socket.io-client';\r\nimport { \r\n    MAKING_POST,\r\n    REACT_POST,\r\n    FETCH_POST_START,\r\n    FETCH_POST_SUCCESS,\r\n    FETCH_POST_FAILURE,\r\n    PUSH_NEW_POST,\r\n    FETCH_MORE_POST,\r\n    FETCH_MORE_POST_START,\r\n    FETCH_MORE_POST_FAILURE,\r\n    FETCH_MORE_POST_SUCCESS,\r\n    FETCH_POST\r\n} from './redux/post/postActionType'\r\n\r\nimport { PUSH_ERROR } from \"./redux/error/errorActionType\"\r\nimport { PUSH_MESS } from \"./redux/notification/notificationActionType\"\r\nimport { \r\n    FETCH_LOCATION,\r\n    SET_LOCATION_FAILED,\r\n    SET_LOCATION_SUCCESS\r\n} from './redux/group/groupActionType';\r\n\r\nexport const INIT_SOCKET = \"INIT_SOCKET\"\r\nexport const TERMINATE_SOCKET = \"TERMINATE_SOCKET\"\r\nexport const STORE_SOCKET = \"STORE_SOCKET\"\r\nexport const REACT_COMMENT = \"REACT_COMMENT\"\r\nexport const UPLOAD_IMAGE = \"UPLOAD_IMAGE\"\r\n\r\nlet socket = null\r\n\r\nexport const socketMiddleware = storeAPI => next => action => {\r\n    \r\n    const { user } = storeAPI.getState().session\r\n    const { posts } = storeAPI.getState()\r\n\r\n    if(action.type === INIT_SOCKET){\r\n\r\n        const handshake = {\r\n            auth : {\r\n                userId : user._id\r\n            }\r\n        }\r\n        socket = io(\"http://localhost:4000\", handshake)\r\n\r\n        next({type: STORE_SOCKET, payload: { socket }})\r\n\r\n/////////////////////////////////////////////////////////////////////// handle init post here\r\n        socket.on(\"server-init-post\", response => {\r\n            if(response.error){\r\n                // dispatch fetch post failure here\r\n                console.log(response.error.message)\r\n                next({\r\n                    type: FETCH_POST_FAILURE,\r\n                    payload : {\r\n                        error : response.error\r\n                    }\r\n                })\r\n            } else {\r\n                //dispatch fetch post success here\r\n                console.log(response.posts)\r\n                next({\r\n                    type : FETCH_POST_SUCCESS,\r\n                    payload: {\r\n                        posts : response.posts\r\n                    }\r\n                })\r\n            }\r\n        })\r\n////////////////////////////////////////////////////////////////////\r\n\r\n///////////////////////////////////////////////////////////////////         handle new post from server\r\n        socket.on(\"server-send-new-post\", function(post) {\r\n            console.log(\"new post created\", post);\r\n            next({ type: PUSH_NEW_POST, payload: { post } })\r\n\r\n        })\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\n///////////////////////////////////////////////////////////////////////     handle error message from server\r\n        socket.on(\"server-send-error\", ({ error }) => {\r\n            console.log(error)\r\n            next({ type: PUSH_ERROR, payload: { error } })\r\n\r\n        })\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\n///////////////////////////////////////////////////////////////////////     handle notification message from server\r\n        socket.on(\"server-send-noti\", ({ mess }) => {\r\n\r\n            next({ type: PUSH_MESS, payload: { mess } })\r\n\r\n        })\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////  handle more post from server\r\n        socket.on(\"server-send-more-post\", response => {\r\n            if(response.error){\r\n                next({ type : FETCH_MORE_POST_FAILURE, payload: {error : response.error} })\r\n            }\r\n\r\n            if(response.posts){\r\n                next({ type: FETCH_MORE_POST_SUCCESS, payload: { posts: response.posts } })\r\n            }\r\n        })\r\n////////////////////////////////////////////////////////////////////////////\r\n\r\n///////////////////////////////////////////////////////////////////////////// handle response fetch location\r\n        socket.on(\"res-fetch-location\", response => {\r\n            console.log(response)\r\n            if(response.error){\r\n                next({ type : SET_LOCATION_FAILED , payload: {error : response.error} })\r\n                next({ type: PUSH_ERROR, payload : { error : response.error } })\r\n            }\r\n\r\n            if(response.location){\r\n                next({ type: SET_LOCATION_SUCCESS, payload: { location: response.location } })\r\n            }\r\n        })\r\n//./////////////////////////////////////////////////////////////////////////\r\n\r\n    } else if (action.type === MAKING_POST) {\r\n        \r\n        const { content, fileList, belongToGroup } = action.payload\r\n\r\n        socket.emit(\"client-make-post\", { \r\n            content,\r\n            fileList,\r\n            belongToGroup,\r\n            owner: user._id,\r\n        })\r\n    } else if (action.type === REACT_POST) {\r\n        \r\n        const { reactedPost } = action.payload\r\n        console.log(\"socketClient\", REACT_POST, reactedPost)\r\n        next({\r\n            type : REACT_POST,\r\n            payload: {\r\n                reactedPost\r\n            }\r\n        })\r\n    \r\n    } else if(action.type === FETCH_MORE_POST){\r\n        console.log(posts)\r\n        next({ type : FETCH_MORE_POST_START })\r\n        console.log(action.payload.location)\r\n        socket.emit(\"client-fetch-more-post\", { skip : posts.skip, location : action.payload.location })\r\n\r\n    } else if(action.type === UPLOAD_IMAGE){\r\n        const { user } = action.payload\r\n        console.log(\"uploadimage \", user)\r\n        next({ type : UPLOAD_IMAGE, payload: { user } })\r\n\r\n        // socket.emit(\"client-fetch-more-post\", { skip : posts.skip })\r\n\r\n    } else if(action.type === TERMINATE_SOCKET){\r\n        socket.disconnect()\r\n    } else if(action.type === FETCH_POST ){\r\n        next({ type : FETCH_POST_START })\r\n        socket.emit(\"client-init-post\", { location : action.payload.location })\r\n    } else if(action.type === FETCH_LOCATION){\r\n        socket.emit(\"fetch-location\", { location : action.payload.location })\r\n    }\r\n    \r\n    else return next(action)\r\n\r\n}","import React, { useEffect } from 'react';\r\n\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nimport TopNav from \"../TopNav/TopNav\"\r\nimport AdminContainer from \"../AdminContainer/AdminContainer\"\r\n// import CreateUser from \"../CreateUser/CreateUser\"\r\n\r\nimport { INIT_SOCKET } from \"../../socketClient\"\r\n\r\nexport default function Admin() {\r\n    \r\n    // const dispatch = useDispatch()\r\n    // useEffect(() => {\r\n    //     dispatch({ type : INIT_SOCKET })\r\n    // }, [])\r\n\r\n    return (\r\n        <div>\r\n            <TopNav />\r\n            <AdminContainer />\r\n            {/* <CreateUser /> */}\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect, } from 'react'\r\nimport { \r\n    Row, \r\n    Col, \r\n    Card, \r\n    Input, \r\n    Button, \r\n    Tooltip, \r\n    Modal, \r\n    Avatar, \r\n    Form, \r\n    Upload,\r\n    message ,\r\n} from 'antd'\r\nimport { \r\n    UploadOutlined, \r\n    PlusOutlined, \r\n    PhoneOutlined, \r\n    LockOutlined, \r\n    HighlightOutlined, \r\n    EyeTwoTone,\r\n    EyeInvisibleOutlined,\r\n} from '@ant-design/icons'\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport TopNav from \"../TopNav/TopNav\"\r\nimport { UPLOAD_IMAGE } from \"../../socketClient\"\r\nimport \"./Profile.scss\"\r\n\r\nfunction getBase64(file) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(file);\r\n\t\treader.onload = () => resolve(reader.result);\r\n\t\treader.onerror = (error) => reject(error);\r\n\t});\r\n}\r\n\r\nexport default function Profile () {\r\n\r\n    const [uploadModalVisible, setUploadModalVisible] = useState(false);\r\n    const [changePasswordVisible, setChangePasswordVisible] = useState(false);\r\n\tconst [confirmUploadImageLoading, setConfirmUploadImageLoading] = useState(false);\r\n    const [state, setState] = useState({\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\", \r\n        password: \"\", \r\n        newPassword: \"\", \r\n        image: \"\",\r\n        fileList: [],\r\n        previewVisible: false,\r\n\t\tpreviewImage: \"\",\r\n\t\tpreviewTitle: \"\",\r\n    })\r\n    const key = 'updatable';\r\n\r\n    const { Meta } = Card;\r\n    const { user, socket, } = useSelector(state => state.session)\r\n    const dispatch = useDispatch()\r\n\r\n    const uploadImageToSocket = ( _id, name, image ) => {\r\n                    \r\n        const updateProfile = {\r\n            _id,\r\n            name,\r\n            image: image,\r\n\r\n        }\r\n        if(socket) {\r\n            socket.emit(\"client-upload-image\", updateProfile)\r\n        }else onMessage(\"Tải ảnh lên server lỗi vì mất kết nối\")\r\n    }\r\n\r\n\tconst handleUploadModalOk = () => {\r\n\t\t\r\n\t\tsetConfirmUploadImageLoading(true);\r\n\t\tsetTimeout(async () => {\r\n            \r\n            onProccessing()\r\n            const image = state.fileList[state.fileList.length - 1]\r\n            if (image !== null && image !== undefined) {\r\n                const uploadImage = await getBase64(image.originFileObj)\r\n                uploadImageToSocket( user._id, user.name, uploadImage );\r\n\r\n            } else if (!state.fileList.length) {\r\n                uploadImageToSocket( user._id, user.name, null );\r\n\r\n            } else onMessage(\"Tải ảnh không tồn tại\")\r\n\t\t\tsetUploadModalVisible(false);\r\n\t\t\tsetConfirmUploadImageLoading(false);\r\n\r\n\t\t}, 2000);\r\n\t};\r\n\r\n\tconst handleUploadModalCancel = () => {\r\n\t\tsetUploadModalVisible(false);\r\n\t};\r\n    \r\n    const handleChangePasswordOk = () => {\r\n        \r\n        const { password, newPassword } = state\r\n        onProccessing()\r\n        if (password !== \"\" && newPassword !== \"\") {\r\n            const updateProfile = { \r\n                _id: user._id,\r\n                newPassword,\r\n                password,\r\n            } \r\n            if(socket) {\r\n                socket.emit(\"client-change-profile-password\", updateProfile)\r\n            } else onMessage(\"Kết nối server lỗi vì mất kết nối\")\r\n        } else onMessage(\"Vui lòng nhập mật khẩu hay mặt khẩu mới\")\r\n\r\n        setChangePasswordVisible(false);\r\n    };\r\n    \r\n    const handleChangePasswordCancel = () => {\r\n        setChangePasswordVisible(false);\r\n    };\r\n    \r\n\tconst handlePreview = async (file) => {\r\n\t\tif (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n\t\t}\r\n\r\n\t\tsetState({\r\n            ...state,\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n            previewTitle:\r\n                file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChange = ({ fileList }) => setState({ ...state, fileList });\r\n\r\n\tconst uploadButton = (<div>\r\n\t\t<PlusOutlined />\r\n\t\t<div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>);\r\n\r\n    const onUploadImage = () => {\r\n        // console.log(\"onUploadImage\")\r\n\t\tsetUploadModalVisible(true)\r\n    }\r\n\r\n    const onChangePassword = () => {\r\n        // console.log(\"onChangePassword\")\r\n        setChangePasswordVisible(true)\r\n    }\r\n\r\n    const onProccessing = () => {\r\n        message.loading({ content: 'Đang xử lý ...', key });\r\n    }\r\n    const onMessage = ( announcement ) => {\r\n        message.success({ content: announcement, key, duration: 2 });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            // console.log(\"user\", user)\r\n            setState(prev => {return {\r\n                ...prev, \r\n                _id: user._id,\r\n                email: user.email,\r\n                name: user.name,\r\n                image: user.image,\r\n                fileList: user.image !== null && user.image !== undefined ?[\r\n                    {\r\n                        uid: '0',\r\n                        name: `${user._id}_avatar.png`,\r\n                        status: 'done',\r\n                        url: user.image || \"\",\r\n                    }\r\n                ]:[],\r\n            }})\r\n        }\r\n        if (socket) {\r\n            socket.once(\"server-send-upload-image\", ( data ) => {\r\n                if ( data.error ) {\r\n                    console.log(\"server-send-upload-image ERROR \", data.error.message)\r\n                    onMessage(\"Cập nhật ảnh đại diện thất bại\")\r\n                } else if ( data.user._id === user._id) {\r\n                    // console.log(\"server-send-upload-image\", data.user)\r\n                    dispatch({ type: UPLOAD_IMAGE, payload: { user: data.user }})\r\n                    onMessage(\"Cập nhật ảnh đại diện thành công\")\r\n                }\r\n                \r\n            })\r\n            socket.once(\"server-send-change-profile-password\", ( data ) => {\r\n                console.log(data)\r\n                if ( data.user._id === user._id ) {\r\n                    onMessage(\"Cập nhật mật khẩu thành công\")\r\n                }\r\n                if (data.error) {\r\n                    console.log(\"erver-send-change-profile-password\", data.error.message)\r\n                    onMessage(\"Cập nhật mật khẩu thất bại\")\r\n                }\r\n            })\r\n        }\r\n    }, [user])\r\n\r\n    return(\r\n        <>\r\n            <TopNav />\r\n            <div className=\"profile\">\r\n                <div\r\n                    className=\"profile__header\" \r\n                    style={{\r\n                        display: \"flex\", \r\n                        justifyContent: \"space-around\", \r\n                        alignItems: \"center\",\r\n                }}> CHI TIẾT THÔNG TIN CÁ NHÂN </div>\r\n\r\n                <div className=\"profile__title\">\r\n                    <Card\r\n                        hoverable\r\n                        // https://ui-avatars.com/\r\n                        // cover={<img alt=\"example\" src={user.image || \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\"} className=\"profile__image\"/>}\r\n                        // image size = 400 in url\r\n                        cover={<img alt=\"example\" src={user.image || `https://ui-avatars.com/api/?background=random&size=400&name=${user.name.split(\" \").join(\"+\")}`} className=\"profile__image\"/>}\r\n                        actions={[\r\n                            <Tooltip title=\"Đổi Ảnh Đại Diện\" placement=\"bottom\">\r\n                                <UploadOutlined key=\"ellipsis\" onClick={onUploadImage} />\r\n                            </Tooltip>,\r\n                            <Tooltip title=\"Đổi Mật Khẩu\" placement=\"bottom\">\r\n                                <LockOutlined onClick={onChangePassword} />\r\n                            </Tooltip>,\r\n                        ]}\r\n                    >\r\n                        <Meta title={user.name} description={`Role: ${user.role}`} style={{ textAlign: \"center\"}} />\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"profile__body\">\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <Input placeholder=\"Nhập email\" prefix={\"Email\"} value={state.email} readOnly={true}/>\r\n                        </Col>\r\n                    </Row> \r\n                    <Row >\r\n                        <Col span={24}>\r\n                            <Input placeholder=\"Nhập Họ và tên\" prefix={\"Họ và tên\"} value={state.name} \r\n                                readOnly={user.role === \"student\"} onChange={(e)=>setState(prev=>{return{...prev, name: e.target.value}})}/>\r\n                        </Col>\r\n                    </Row>\r\n                    {/* <Row className=\"profile__action\" >\r\n                        <Col><Button type=\"success\" icon={<HighlightOutlined />} > Thay đổi</Button></Col>\r\n                        <Col><Button type=\"primary\" icon={<PhoneOutlined />} > Thay đổi</Button></Col>\r\n                    </Row> */}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Modal upload image */}\r\n            <Modal \r\n                title=\"Thay đổi ảnh đại diện\"\r\n                visible={uploadModalVisible}\r\n                closable={true}\r\n                onOk={handleUploadModalOk}\r\n                confirmLoading={confirmUploadImageLoading}\r\n                onCancel={handleUploadModalCancel}\r\n                bodyStyle={{ padding: \"1em\" }}\r\n                style={{ top: 30 }}\r\n                >\r\n                <Meta\r\n                        avatar={ <Avatar src={user.image} /> }\r\n                        title={ user.name }\r\n                    />\r\n                    <Card.Grid hoverable={false} style={{ width: \"100%\" }}>\r\n                        <Form>\r\n                            <Form.Item>\r\n                                <Upload\r\n                                    listType=\"picture-card\"\r\n                                    fileList={state.fileList}\r\n                                    onPreview={handlePreview}\r\n                                    onChange={handleChange}\r\n                                >\r\n                                {state.fileList.length >= 2 ? null : uploadButton}\r\n                                </Upload>\r\n                            </Form.Item>\r\n                            <Modal\r\n                                visible={state.previewVisible}\r\n                                title={state.previewTitle}\r\n                                footer={null}\r\n                                onCancel={() => setState({ ...state, previewVisible: false })}\r\n                            >\r\n                                <img\r\n                                    alt=\"example\"\r\n                                    style={{ width: \"100%\" }}\r\n                                    src={state.previewImage}\r\n                                />\r\n                            </Modal>\r\n                        </Form>\r\n                    </Card.Grid>\r\n            </Modal>\r\n            {/* Modal changed password */}\r\n            {user.role !== \"student\" && \r\n                <Modal title=\"Thay đổi mật khẩu\" visible={changePasswordVisible}onCancel={handleChangePasswordCancel}  onOk={handleChangePasswordOk} >\r\n                    <Input.Password\r\n                        placeholder=\"Nhập mật khẩu hiện tại\"\r\n                        iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                        value={state.password}\r\n                        onChange={(e)=>setState(prev=>{return{...prev, password: e.target.value}})}\r\n                        />\r\n                    <Input.Password\r\n                        placeholder=\"Nhập mật khẩu mới\"\r\n                        iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                        value={state.newPassword}\r\n                        onChange={(e)=>setState(prev=>{return{...prev, newPassword: e.target.value}})}\r\n                        />\r\n                </Modal>\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Badge } from \"antd\"\r\nimport {\r\n    useHistory,\r\n    useParams,\r\n} from \"react-router-dom\"\r\n\r\nimport \"./TypeSearchLinkBadge.scss\"\r\n\r\nfunction TypeSearchLinkBadge(props) {\r\n\r\n    const history = useHistory()\r\n    const { query } = useParams()\r\n\r\n    function chooseFilter ( _id, ) {\r\n        history.push(`/search/${props.data.value}/${query}`)\r\n    };\r\n\r\n    return (\r\n        <div style={{margin: \"0.5em\", maxWidth: \"200px\", minWidth: \"150px\"}}>\r\n            <Badge className=\"group-badge\">\r\n                <div \r\n                    onClick={() => chooseFilter( props.data.value )}\r\n                    className=\"group-badge__text\"\r\n                    style={{\r\n                        padding: \"1em\",\r\n                        borderRadius: \"1em\",\r\n                        backgroundColor: \"#95cbff\",\r\n                        fontWeight: \"bold\"\r\n                    }}\r\n                    >\r\n                    {props.data.name}\r\n                </div>\r\n            </Badge>    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TypeSearchLinkBadge;","import React, { useEffect, } from 'react';\r\nimport { List, Divider } from \"antd\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {\r\n    LIST_GROUP,\r\n} from \"../../redux/group/groupActionType\"\r\nimport TypeSearchLinkBadge from \"../TypeSearchLinkBadge/TypeSearchLinkBadge\"\r\n\r\nimport \"./TypeSearchContainer.scss\"\r\nfunction TypeSearchContainer(props) {\r\n\r\n    // const { listGroup } = useSelector(state => state.groups)\r\n    const listTypeSearch = [\r\n        {_id: \"0\", name: \"All\", value: \"all\"},\r\n        {_id: \"1\", name: \"Posts\", value: \"posts\"},\r\n        {_id: \"2\", name: \"People\", value: \"people\"},\r\n        {_id: \"3\", name: \"Groups\", value: \"groups\"},\r\n    ]\r\n    const title = props.title || false\r\n\r\n    return (\r\n        <div style={ title ? { \r\n            backgroundColor : \"white\", \r\n            // padding:\"1em\", \r\n            border: \"2px solid #eeeeee\",\r\n            borderTop: \"none\",\r\n            borderRadius: \"0 0 10px 10px\",\r\n\r\n        } : null}>\r\n            {title && <div style={{padding : \"0 1em\"}}> <h3 >{title}</h3> <Divider /> </div> }\r\n            <List \r\n                style = {{ maxHeight : \"calc(100vh - 99px - 72px)\", padding: \"0 1em\" }}\r\n                dataSource={listTypeSearch}\r\n                renderItem={item => < TypeSearchLinkBadge data={item} />}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TypeSearchContainer;","import React from 'react';\r\nimport \"./TitleSearch.scss\"\r\nexport default function Title ({ name, filter}) {\r\n    return (\r\n        <div className={`title-search title-search__${filter}`}>\r\n            {name}\r\n        </div>\r\n    )\r\n}","export const SEARCH_ALL = \"SEARCH_ALL\"\r\nexport const SEARCH_POSTS = \"SEARCH_POSTS\"\r\nexport const SEARCH_GROUPS = \"SEARCH_GROUPS\"\r\nexport const SEARCH_PEOPLE = \"SEARCH_PEOPLE\"\r\n\r\nexport const SEARCH_START = \"SEARCH_START\"\r\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\"\r\nexport const SEARCH_FAILURE = \"SEARCH_FAILURE\"\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport moment from \"moment\"\r\n\r\nimport { Card, Avatar, Typography, Carousel, Image } from \"antd\";\r\nimport {\r\n  RightOutlined ,\r\n  LeftOutlined,\r\n  ArrowRightOutlined\r\n} from \"@ant-design/icons\";\r\nimport { NavLink, } from \"react-router-dom\"\r\n\r\nimport CommentContainer from \"../CommentContainer/CommentContainer\";\r\nimport Like from \"../Action/Like\"\r\nimport Dislike from \"../Action/Dislike\"\r\nimport CommentBtn from \"../Action/CommentBtn\"\r\n\r\nimport { REACT_POST } from \"../../redux/post/postActionType\"\r\nimport {\r\n    SET_GROUP,\r\n} from \"../../redux/group/groupActionType\"\r\n\r\nconst { Meta } = Card;\r\nconst { Paragraph } = Typography;\r\n\r\nfunction SearchPost({ item }) {\r\n\r\n    const [state, setState] = useState({\r\n        postId: item._id,\r\n        comments : [],\r\n        loading : false,\r\n        error : null,\r\n        isShow : false\r\n    });\r\n    const slider = useRef(null)\r\n\r\n    const { socket, user } = useSelector(state => state.session)\r\n    const dispatch = useDispatch()\r\n\r\n    const onReact = ( reaction ) => {\r\n        // console.log(reaction, \" post \", item.content)\r\n        socket.emit(\"client-react-post\", { id: item._id, user: user._id, reaction})\r\n    }\r\n\r\n    const toGroup = (_id, name) => {\r\n        \r\n        dispatch({type: SET_GROUP, payload: { currentGroup: {_id, name} }})\r\n    }\r\n/////////////////////////////////////////////////////////////// socket process here\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.once(\"server-send-react-post\", ({ error, item : reactedPost, postId }) => {\r\n                if (error && error !== null && postId == item._id) {\r\n                    console.log(error)\r\n                    setState({\r\n                        ...state, \r\n                        loading: false,\r\n                        error : error.message\r\n                    })\r\n                } else if (reactedPost && postId === item._id) {\r\n                    console.log(\"reacted post\", reactedPost)\r\n                    dispatch({ type: REACT_POST, payload: { reactedPost }})\r\n                }\r\n            })\r\n        }\r\n    }, [ item ])\r\n\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            ...state, \r\n            loading: true,\r\n            error : null\r\n        })\r\n        if (socket) {\r\n            socket.emit(\"client-req-cmt\", { postId : item._id })\r\n            socket.on(\"server-send-comment-list\", response => {\r\n                if(response.error && response.postId == item._id) {\r\n                    console.log(response.error.message)\r\n                    setState({\r\n                        ...state, \r\n                        loading: false,\r\n                        error : response.error.message\r\n                    })\r\n                } else if(response.comments && response.postId == item._id){\r\n                    // console.log(item._id, response.comments)\r\n                    setState({\r\n                        ...state, \r\n                        loading: false,\r\n                        comments : response.comments,\r\n                        error : null\r\n                    })\r\n                } \r\n                \r\n            })\r\n        }\r\n    }, [item._id])\r\n\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on(\"server-send-comment-post\", ({ error, comment, belongToPost}) => {\r\n                if (error !== null && error !== undefined && error) {\r\n                    console.log(\"error\", error.message)\r\n                }\r\n                if (comment && belongToPost === item._id ) {\r\n                    \r\n                    setState({\r\n                        ...state,\r\n                        comments : [comment, ...state.comments]\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }, [state])\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    return (\r\n        <div style={{ width: \"100%\", margin: \"1em 0\" }}>\r\n            <Card\r\n                style={{ width: \"100%\" }}\r\n                actions={[\r\n                    <Like onClick={() => onReact(\"likes\")} like={item.likes} />, \r\n                    <Dislike onClick={()=> onReact(\"dislikes\")} dislike={item.dislikes} />,\r\n                    <CommentBtn cmtCounter={state.comments.length} onClick={() => setState(prev => ({...prev, isShow : !prev.isShow}))} />\r\n                ]}\r\n            >\r\n                <Meta\r\n                    avatar={\r\n                        item.owner.image \r\n                        ? \r\n                        <Avatar src={item.owner.image} /> \r\n                        : \r\n                        <Avatar src={`https://ui-avatars.com/api/?background=random&size=400&name=${user.name.split(\" \").join(\"+\")}`} /> \r\n                        \r\n                        // null\r\n                        // (<div style={{\r\n                        //     width: \"32px\",\r\n                        //     height: \"32px\",\r\n                        //     paddingBottom: \"5px\",\r\n                        //     borderRadius: \"16px\",\r\n                        //     display: \"flex\",\r\n                        //     justifyContent: \"center\",\r\n                        //     alignItems: \"center\",\r\n                        //     color : \"red\",\r\n                        //     backgroundColor: \"orange\",\r\n                        //     fontWeight: \"bold\",\r\n                        //     fontSize: \"1.5em\",\r\n                        //     textTransform : \"uppercase\"\r\n                        // }}\r\n                        \r\n                        // >{item.owner.name[0]}</div>)\r\n                    }\r\n                    title={\r\n                        <p style={{ marginBottom: 0 }}>\r\n                            <b>\r\n                                <NavLink \r\n                                    style={{color: 'black'}}\r\n                                    // onClick={() => toGroup(item.belongToGroup._id, item.belongToGroup.name)} \r\n                                    to={`/users/${item.owner._id}`}>{item.owner.name}</NavLink>\r\n                                {item.belongToGroup && \r\n                                    <span>\r\n                                        <ArrowRightOutlined /> \r\n                                        <NavLink \r\n                                            style={{color: 'black'}}\r\n                                            onClick={() => toGroup(item.belongToGroup._id, item.belongToGroup.name)} \r\n                                            to={`/groups/${item.belongToGroup._id}`}>{item.belongToGroup.name}</NavLink>\r\n                                    </span>\r\n                                }\r\n                            </b>\r\n                            <br />\r\n                            <small>\r\n                                { moment(item.createdAt).format('hh:mm, Do MMMM YYYY') }\r\n                            </small>\r\n                        </p>\r\n                    }\r\n                    style={{ padding: \"1em\", userSelect:\"none\" }}\r\n                />\r\n\r\n                {/* content */}\r\n                <Card.Grid style={{ width: \"100%\", paddingBottom:0 }} hoverable={false}>\r\n\r\n                    <Paragraph ellipsis={{ rows: 3, expandable: true, symbol: \"more\" }}>\r\n                        {\r\n                            item.content\r\n                        }\r\n                    </Paragraph>\r\n                    \r\n                        <Carousel ref={slider}>\r\n                            {\r\n                                item.image.map((url, index) => (<Image \r\n                                    key= {index}\r\n                                    style={{ width: \"100%\" }}\r\n                                    src={url}\r\n                                />))\r\n                            }  \r\n                        </Carousel>\r\n                        <div style={{width: \"100%\", display:\"flex\", justifyContent:\"space-between\", padding:5}}>\r\n                            { item.image.length > 1 ?  <LeftOutlined onClick={() => slider.current.next()} onSelect={() => false} /> : null }\r\n                            { item.image.length > 1 ? (<RightOutlined onClick={() => slider.current.prev()} onSelect={() => false}/>) : null }\r\n                        </div>\r\n                \r\n                \r\n                </Card.Grid>\r\n            </Card>\r\n\r\n            {/* comment container*/}\r\n            {state.isShow && <CommentContainer containerState = {state} setContainerState = {(obj) => setState(obj)} />}\r\n        </div>\r\n  \r\n    );\r\n}\r\n\r\nexport default React.memo(SearchPost);","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport moment from \"moment\"\r\n\r\nimport { Card, Avatar, Typography, Carousel, Image } from \"antd\";\r\nimport {\r\n  RightOutlined ,\r\n  LeftOutlined,\r\n  ArrowRightOutlined,\r\n  LikeOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { NavLink, } from \"react-router-dom\"\r\n\r\nimport CommentContainer from \"../CommentContainer/CommentContainer\";\r\nimport Like from \"../Action/Like\"\r\nimport Dislike from \"../Action/Dislike\"\r\nimport CommentBtn from \"../Action/CommentBtn\"\r\n\r\nimport { REACT_POST } from \"../../redux/post/postActionType\"\r\nimport {\r\n    SET_GROUP,\r\n} from \"../../redux/group/groupActionType\"\r\n\r\nconst { Meta } = Card;\r\nconst { Paragraph } = Typography;\r\n\r\nfunction SearchGroup({ item }) {\r\n\r\n    const [state, setState] = useState({\r\n        // postId: item._id,\r\n        // comments : [],\r\n        loading : false,\r\n        error : null,\r\n        isShow : false\r\n    });\r\n    const slider = useRef(null)\r\n\r\n    const { socket, user } = useSelector(state => state.session)\r\n    const dispatch = useDispatch()\r\n\r\n    // const onReact = ( reaction ) => {\r\n    //     // console.log(reaction, \" post \", post.content)\r\n    //     socket.emit(\"client-react-post\", { id: post._id, user: user._id, reaction})\r\n    // }\r\n\r\n    const toGroup = (_id, name) => {\r\n        dispatch({type: SET_GROUP, payload: { currentGroup: {_id, name} }})\r\n    }\r\n/////////////////////////////////////////////////////////////// socket process here\r\n    useEffect(() => {\r\n        if (socket) {\r\n            // socket.once(\"server-send-react-post\", ({ error, post : reactedPost, postId }) => {\r\n            //     if (error && error !== null && postId == post._id) {\r\n            //         console.log(error)\r\n            //         setState({\r\n            //             ...state, \r\n            //             loading: false,\r\n            //             error : error.message\r\n            //         })\r\n            //     } else if (reactedPost && postId === post._id) {\r\n            //         console.log(\"reacted post\", reactedPost)\r\n            //         dispatch({ type: REACT_POST, payload: { reactedPost }})\r\n            //     }\r\n            // })\r\n        }\r\n    }, [ item ])\r\n\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            ...state, \r\n            loading: true,\r\n            error : null\r\n        })\r\n        if (socket) {\r\n            // socket.emit(\"client-req-cmt\", { postId : item._id })\r\n            // socket.on(\"server-send-comment-list\", response => {\r\n            //     if(response.error && response.postId == item._id) {\r\n            //         console.log(response.error.message)\r\n            //         setState({\r\n            //             ...state, \r\n            //             loading: false,\r\n            //             error : response.error.message\r\n            //         })\r\n            //     } else if(response.comments && response.postId == item._id){\r\n            //         // console.log(item._id, response.comments)\r\n            //         setState({\r\n            //             ...state, \r\n            //             loading: false,\r\n            //             comments : response.comments,\r\n            //             error : null\r\n            //         })\r\n            //     } \r\n                \r\n            // })\r\n        }\r\n    }, [item._id])\r\n\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            // socket.on(\"server-send-comment-post\", ({ error, comment, belongToPost}) => {\r\n            //     if (error !== null && error !== undefined && error) {\r\n            //         console.log(\"error\", error.message)\r\n            //     }\r\n            //     if (comment && belongToPost === post._id ) {\r\n                    \r\n            //         setState({\r\n            //             ...state,\r\n            //             comments : [comment, ...state.comments]\r\n            //         })\r\n            //     }\r\n            // })\r\n        }\r\n    }, [state])\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    return (\r\n        <div style={{ width: \"100%\", margin: \"1em 0\" }}>\r\n            <Card\r\n                style={{ width: \"100%\" }}\r\n                actions={[\r\n                    // <Like onClick={() => onReact(\"likes\")} like={post.likes} />, \r\n                    // <Dislike onClick={()=> onReact(\"dislikes\")} dislike={post.dislikes} />,\r\n                    // <CommentBtn cmtCounter={state.comments.length} onClick={() => setState(prev => ({...prev, isShow : !prev.isShow}))} />\r\n                ]}\r\n            >\r\n                <Meta\r\n                    avatar={\r\n                        // item.owner.image \r\n                        // ? \r\n                        // <Avatar src={item.owner.image} /> \r\n                        // : \r\n                        <Avatar src={`https://ui-avatars.com/api/?background=random&size=400&name=${item.name.split(\" \").join(\"+\")}`} /> \r\n                        \r\n                        // null\r\n                        // (<div style={{\r\n                        //     width: \"32px\",\r\n                        //     height: \"32px\",\r\n                        //     paddingBottom: \"5px\",\r\n                        //     borderRadius: \"16px\",\r\n                        //     display: \"flex\",\r\n                        //     justifyContent: \"center\",\r\n                        //     alignItems: \"center\",\r\n                        //     color : \"red\",\r\n                        //     backgroundColor: \"orange\",\r\n                        //     fontWeight: \"bold\",\r\n                        //     fontSize: \"1.5em\",\r\n                        //     textTransform : \"uppercase\"\r\n                        // }}\r\n                        \r\n                        // >{post.owner.name[0]}</div>)\r\n                    }\r\n                    title={\r\n                        <p style={{ marginBottom: 0 }}>\r\n                            <b>\r\n                                <NavLink \r\n                                            style={{color: 'black'}}\r\n                                            onClick={() => toGroup(item._id, item.name)} \r\n                                            to={`/groups/${item._id}`}>{item.name}</NavLink>\r\n                                {/* {post.belongToGroup && \r\n                                    <span>\r\n                                        <ArrowRightOutlined /> \r\n                                        <NavLink \r\n                                            style={{color: 'black'}}\r\n                                            onClick={() => toGroup(post.belongToGroup._id, post.belongToGroup.name)} \r\n                                            to={`/groups/${post.belongToGroup._id}`}>{post.belongToGroup.name}</NavLink>\r\n                                    </span>\r\n                                } */}\r\n                                \r\n                                {/* <LikeOutlined /> */}\r\n                            </b>\r\n                            <br />\r\n                            {/* <small>\r\n                                { moment(post.createdAt).format('hh:mm, Do MMMM YYYY') }\r\n                            </small> */}\r\n                        </p>\r\n                    }\r\n                    style={{ padding: \"1em\", userSelect:\"none\" }}\r\n                />\r\n\r\n                {/* content */}\r\n                {/* <Card.Grid style={{ width: \"100%\", paddingBottom:0 }} hoverable={false}>\r\n\r\n                    <Paragraph ellipsis={{ rows: 3, expandable: true, symbol: \"more\" }}>\r\n                        {\r\n                            post.content\r\n                        }\r\n                    </Paragraph>\r\n                    \r\n                        <Carousel ref={slider}>\r\n                            {\r\n                                post.image.map((url, index) => (<Image \r\n                                    key= {index}\r\n                                    style={{ width: \"100%\" }}\r\n                                    src={url}\r\n                                />))\r\n                            }  \r\n                        </Carousel>\r\n                        <div style={{width: \"100%\", display:\"flex\", justifyContent:\"space-between\", padding:5}}>\r\n                            { post.image.length > 1 ?  <LeftOutlined onClick={() => slider.current.next()} onSelect={() => false} /> : null }\r\n                            { post.image.length > 1 ? (<RightOutlined onClick={() => slider.current.prev()} onSelect={() => false}/>) : null }\r\n                        </div>\r\n                \r\n                \r\n                </Card.Grid> */}\r\n            </Card>\r\n\r\n            {/* comment container*/}\r\n            {/* {state.isShow && <CommentContainer containerState = {state} setContainerState = {(obj) => setState(obj)} />} */}\r\n        </div>\r\n  \r\n    );\r\n}\r\n\r\nexport default React.memo(SearchGroup);","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport moment from \"moment\"\r\n\r\nimport { Card, Avatar, Typography, Carousel, Image } from \"antd\";\r\nimport {\r\n  RightOutlined ,\r\n  LeftOutlined,\r\n  ArrowRightOutlined,\r\n  LikeOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { NavLink, } from \"react-router-dom\"\r\n\r\nimport CommentContainer from \"../CommentContainer/CommentContainer\";\r\nimport Like from \"../Action/Like\"\r\nimport Dislike from \"../Action/Dislike\"\r\nimport CommentBtn from \"../Action/CommentBtn\"\r\n\r\nimport { REACT_POST } from \"../../redux/post/postActionType\"\r\nimport {\r\n    SET_GROUP,\r\n} from \"../../redux/group/groupActionType\"\r\n\r\nconst { Meta } = Card;\r\nconst { Paragraph } = Typography;\r\n\r\nfunction SearchPeople({ item }) {\r\n\r\n    const [state, setState] = useState({\r\n        // postId: item._id,\r\n        // comments : [],\r\n        loading : false,\r\n        error : null,\r\n        isShow : false\r\n    });\r\n    const slider = useRef(null)\r\n\r\n    const { socket, user } = useSelector(state => state.session)\r\n    const dispatch = useDispatch()\r\n\r\n    const toGroup = (_id, name) => {\r\n        dispatch({type: SET_GROUP, payload: { currentGroup: {_id, name} }})\r\n    }\r\n/////////////////////////////////////////////////////////////// socket process here\r\n    useEffect(() => {\r\n        if (socket) {\r\n            // socket.once(\"server-send-react-post\", ({ error, post : reactedPost, postId }) => {\r\n            //     if (error && error !== null && postId == post._id) {\r\n            //         console.log(error)\r\n            //         setState({\r\n            //             ...state, \r\n            //             loading: false,\r\n            //             error : error.message\r\n            //         })\r\n            //     } else if (reactedPost && postId === post._id) {\r\n            //         console.log(\"reacted post\", reactedPost)\r\n            //         dispatch({ type: REACT_POST, payload: { reactedPost }})\r\n            //     }\r\n            // })\r\n        }\r\n    }, [ item ])\r\n\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            ...state, \r\n            loading: true,\r\n            error : null\r\n        })\r\n        if (socket) {\r\n            // socket.emit(\"client-req-cmt\", { postId : item._id })\r\n            // socket.on(\"server-send-comment-list\", response => {\r\n            //     if(response.error && response.postId == item._id) {\r\n            //         console.log(response.error.message)\r\n            //         setState({\r\n            //             ...state, \r\n            //             loading: false,\r\n            //             error : response.error.message\r\n            //         })\r\n            //     } else if(response.comments && response.postId == item._id){\r\n            //         // console.log(item._id, response.comments)\r\n            //         setState({\r\n            //             ...state, \r\n            //             loading: false,\r\n            //             comments : response.comments,\r\n            //             error : null\r\n            //         })\r\n            //     } \r\n                \r\n            // })\r\n        }\r\n    }, [item._id])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     if (socket) {\r\n    //         socket.on(\"server-send-comment-post\", ({ error, comment, belongToPost}) => {\r\n    //             if (error !== null && error !== undefined && error) {\r\n    //                 console.log(\"error\", error.message)\r\n    //             }\r\n    //             if (comment && belongToPost === post._id ) {\r\n                    \r\n    //                 setState({\r\n    //                     ...state,\r\n    //                     comments : [comment, ...state.comments]\r\n    //                 })\r\n    //             }\r\n    //         })\r\n    //     }\r\n    // }, [state])\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    return (\r\n        <div style={{ width: \"100%\", margin: \"1em 0\" }}>\r\n            <Card\r\n                style={{ width: \"100%\" }}\r\n                actions={[]}\r\n            >\r\n                <Meta\r\n                    avatar={\r\n                        item.image \r\n                        ? \r\n                        <Avatar src={item.image} /> \r\n                        : \r\n                        <Avatar src={`https://ui-avatars.com/api/?background=random&size=400&name=${item.name.split(\" \").join(\"+\")}`} /> \r\n                    }\r\n                    title={\r\n                        <p style={{ marginBottom: 0 }}>\r\n                            <b>\r\n                                <NavLink \r\n                                    style={{color: 'black'}}\r\n                                    // onClick={() => toGroup(item._id, item.name)} \r\n                                    to={`/user/${item._id}`}>{item.name}\r\n                                </NavLink>\r\n                            </b>\r\n                            <br />\r\n                        </p>\r\n                    }\r\n                    style={{ padding: \"1em\", userSelect:\"none\" }}\r\n                />\r\n            </Card>\r\n        </div>\r\n  \r\n    );\r\n}\r\n\r\nexport default React.memo(SearchPeople);","import React, { useEffect} from 'react';\r\nimport { useSelector, useDispatch, } from 'react-redux';\r\nimport { Row, Spin, Divider, } from \"antd\"\r\n\r\nimport {\r\n    SEARCH_START,\r\n    SEARCH_POSTS,\r\n    SEARCH_GROUPS,\r\n    SEARCH_PEOPLE,\r\n    SEARCH_SUCCESS,\r\n} from \"../../redux/search/searchActionType\"\r\n\r\nimport TitleSearch from \"../TitleSearch/TitleSearch\"\r\nimport SearchPost from \"../SearchPost/SearchPost\"\r\nimport SearchGroup from \"../SearchGroup/SearchGroup\"\r\nimport SearchPeople from \"../SearchPeople/SearchPeople\"\r\n\r\nexport default function SearchContainer ({ type, filter }) {\r\n\r\n    const types = [ \r\n        \"groups\", \r\n        \"people\", \r\n        \"posts\", \r\n    ]\r\n    const { results } = useSelector(state => state.search)\r\n    const { socket, } = useSelector(state => state.session)\r\n    const dispatch = useDispatch()\r\n\r\n    const SearchItemType = (type) => {\r\n        console.log(\"searchItemType\", type, results[type])\r\n        return (\r\n            <Row style={{\r\n                display: \"flex\", \r\n                flexDirection: \"column\", \r\n                justifyContent: \"center\", \r\n                alignItems: \"center\",\r\n            }}>\r\n                {\r\n                    results[type].map((item) => \r\n                        <div className=\"post\" key={item._id} >\r\n                            {type===\"posts\" && <SearchPost item={item} />}\r\n                            {type===\"groups\" && <SearchGroup item={item} />}\r\n                            {type===\"people\" && <SearchPeople item={item} />}\r\n                        </div>\r\n                    )\r\n                }\r\n            </Row>\r\n        )\r\n    }\r\n    // {\r\n    //     // posts.isFetching ? \r\n    //     // (<Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} />) : \r\n    //     // (<p \r\n    //     //     className=\"load-more\" \r\n    //     //     onClick={ () => dispatch({ type : FETCH_MORE_POST })}\r\n    //     // > load more </p>)\r\n    // }\r\n    useEffect(() => {\r\n        if(socket) {\r\n            socket.once(\"server-send-search-results\", ({ posts, groups, people}) => {\r\n                dispatch({type: SEARCH_START})\r\n                if (posts && groups && people) {\r\n                    dispatch({type: SEARCH_SUCCESS, payload: { posts, groups, people}})\r\n                } else if (posts) {\r\n                    dispatch({type: SEARCH_POSTS, payload: { posts }})\r\n                } else if (groups) {\r\n                    dispatch({type: SEARCH_GROUPS, payload: { groups }})\r\n                } else if (people) {\r\n                    dispatch({type: SEARCH_PEOPLE, payload: { people }})\r\n                }\r\n            })\r\n            \r\n        }\r\n    },[ results ])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                { filter === \"all\" && \r\n                    types.map((type, index) => (\r\n                        <div key={index}>\r\n                            <Row style={{\r\n                                display: \"flex\", \r\n                                flexDirection: \"column\", \r\n                                justifyContent: \"center\", \r\n                                alignItems: \"center\",\r\n                                \r\n                            }}>\r\n                                <Divider style={{alignItems: \"center\"}}/>\r\n                                <TitleSearch filter={type} name={`${type.charAt(0).toUpperCase() + type.slice(1)}`}/>\r\n                            </Row>\r\n                            \r\n                            {type === \"groups\" && SearchItemType(\"groups\")}\r\n                            {type === \"people\" && SearchItemType(\"people\")}\r\n                            {type === \"posts\" && SearchItemType(\"posts\")}\r\n                        </div>\r\n                    )) \r\n                }\r\n            </div>\r\n            {filter !== \"all\" && filter === \"posts\" && SearchItemType(filter)}\r\n            {filter !== \"all\" && filter === \"groups\" && SearchItemType(filter)}\r\n            {filter !== \"all\" && filter === \"people\" && SearchItemType(filter)}\r\n            \r\n        </div>\r\n\r\n    )\r\n}","import React, { useState, useEffect, } from 'react';\r\nimport {useSelector, useDispatch } from \"react-redux\"\r\nimport {\r\n    useParams,\r\n} from \"react-router-dom\";\r\n\r\nimport { Divider, Row, Spin, message } from \"antd\"\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport TypeSearchContainer from \"../TypeSearchContainer/TypeSearchContainer\"\r\nimport TitleSearch from \"../TitleSearch/TitleSearch\"\r\nimport SearchContainer from \"../SearchContainer/SearchContainer\"\r\n\r\nimport { CLEAR_ERROR } from \"../../redux/error/errorActionType\"\r\nimport { FETCH_MORE_POST } from '../../redux/post/postActionType';\r\n\r\nimport \"./MainSearch.scss\"\r\n\r\nfunction MainSearch( props ) {\r\n\r\n    const { posts, error, mess } = useSelector(state => state)\r\n    const { filter } = useParams()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(error.content){\r\n            message.error(error.content)\r\n            dispatch({ type: CLEAR_ERROR })\r\n        }\r\n    }, [error])\r\n\r\n    useEffect(() => {\r\n        if(mess.content){\r\n            message.success(mess.content)\r\n        }\r\n    }, [mess.content])\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            {/* left nav link for desktop */}\r\n            <div className=\"main__left\">\r\n                <div className=\"main__left__title\">\r\n                    <h3>Kết quả tìm kiếm</h3>\r\n                    <Divider />\r\n                </div>\r\n                <TypeSearchContainer />\r\n            </div>\r\n            \r\n            <div className=\"main__right\">\r\n\r\n                <Row style={{\r\n                    display: \"flex\", \r\n                    flexDirection: \"row\", \r\n                    justifyContent: \"center\", \r\n                    alignItems: \"center\",\r\n                }}>\r\n                    <TitleSearch name={`${filter.charAt(0).toUpperCase() + filter.slice(1)}`}/>\r\n                </Row>\r\n                \r\n                <div>\r\n                    <SearchContainer filter={filter} />\r\n                </div> \r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainSearch;","import React, { useEffect, } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport TopNav from \"../TopNav/TopNav.jsx\"\r\nimport MainSearch from \"../MainSearch/MainSearch\"\r\n\r\nexport default function Home(props) {\r\n    \r\n    const { socket } = useSelector(state => state.session)\r\n    const { filter, query, } = useParams();\r\n    const searchQuery = decodeURIComponent(query)\r\n    \r\n    useEffect(() =>{\r\n        // console.log(\"filter\", filter, \"query\", searchQuery)\r\n        socket.emit(`client-search-${filter}`, { query: searchQuery }) \r\n    }, [ filter, query, ])\r\n\r\n    return (\r\n        <div>\r\n            <TopNav />\r\n            <MainSearch />\r\n        </div>\r\n    )\r\n}","import React, { useEffect, } from 'react';\r\nimport { \r\n    Route, \r\n    Redirect,\r\n} from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Spin } from \"antd\"\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    const { user, isFetching } = useSelector(state => state.session)\r\n\r\n    useEffect(() => {\r\n        console.log(`Protected Routes ${isFetching}`)\r\n        console.log(`user`)\r\n        console.log(user)\r\n    },[isFetching, user])\r\n\r\n    return (\r\n        <Route {...rest} >\r\n            {\r\n                isFetching ? \r\n                (<Spin spinning={isFetching}  size=\"large\"/>)\r\n                :\r\n                (\r\n                    user ? \r\n                        <Component />\r\n                        :\r\n                        <Redirect to=\"/login\" />\r\n                )\r\n            }\r\n        </Route>\r\n            \r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;","import React, { useEffect, } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Spin } from \"antd\"\r\n\r\nfunction PublicRoute({component : Component, ...rest}) {\r\n\r\n    const { user, isFetching } = useSelector(state => state.session)\r\n\r\n    return (\r\n        <Route { ...rest } >\r\n            {\r\n                isFetching?\r\n                (<Spin spinning={isFetching}  size=\"large\"/>):\r\n                (user === null ?\r\n                    <Component />\r\n                    :\r\n                    <Redirect to=\"/\" />    \r\n                )\r\n            }\r\n        </Route>\r\n    );\r\n}\r\n\r\nexport default PublicRoute;","import React, { useEffect, } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Spin } from \"antd\"\r\n\r\nimport Admin from \"../Admin/Admin\"\r\n\r\nfunction AdminRoute ({ component: Component, ...rest })  {\r\n    const { user, isFetching } = useSelector(state => state.session)\r\n    \r\n    useEffect(() => {\r\n        console.log(`Admin Routes ${isFetching}`)\r\n        console.log(`user`)\r\n        console.log(user)\r\n    },[isFetching, user])\r\n\r\n    return (\r\n        <Route {...rest} >\r\n            {\r\n                isFetching ? \r\n                (<Spin spinning={isFetching} size=\"large\"/>)\r\n                :\r\n                (\r\n                    user ? \r\n                        user.role === \"admin\"?\r\n                            <Admin />\r\n                            :\r\n                            <Component />\r\n                        :\r\n                        <Redirect to=\"/login\" />\r\n                )\r\n            }\r\n        </Route>\r\n            \r\n    )\r\n}\r\n\r\nexport default AdminRoute;","import React, { useEffect } from 'react';\r\nimport { useDispatch } from \"react-redux\"\r\nimport { INIT_SOCKET, TERMINATE_SOCKET } from \"../../socketClient\"\r\nimport {\r\n    Route,\r\n    Switch\r\n} from \"react-router-dom\";\r\nimport Profile from '../Profile/Profile';\r\nimport Search from '../Search/Search';\r\nimport Home from '../Home/Home';\r\nimport AdminRoute from '../Route/AdminRoute';\r\nimport Admin from '../Admin/Admin';\r\n\r\nfunction Root(props) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        console.log(\"init_socket\")\r\n        dispatch({ type : INIT_SOCKET })\r\n\r\n        return () => {\r\n            dispatch({ type : TERMINATE_SOCKET })\r\n        } \r\n    }, [])\r\n\r\n    return (\r\n        <Switch>\r\n            <AdminRoute path=\"/admin\" component={Admin} />\r\n            <Route path=\"/me\" component={Home} />\r\n            <Route path=\"/setting\" component={Profile} />\r\n            <Route path=\"/search/:filter/:query\" component={Search} />\r\n            <Route path=\"/group/:idGroup\" component={Home} />\r\n            <Route path=\"/user/:idUser\" component={Home} />\r\n            <Route exact path=\"\" component={Home} />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Root;","import React, { useEffect, } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {KEEP_SESSION} from \"./redux/session/sessionActionType\"\r\n\r\nimport Home from \"./components/Home/Home\"\r\nimport Login from \"./components/Login/Login\"\r\nimport Admin from \"./components/Admin/Admin\"\r\nimport MainContainer from \"./components/MainContainer/MainContainer\"\r\nimport Profile from \"./components/Profile/Profile\"\r\nimport Search from \"./components/Search/Search\"\r\n\r\nimport PrivateRoute from \"./components/Route/PrivateRoute\"\r\nimport PublicRoute from \"./components/Route/PublicRoute\"\r\nimport AdminRoute from \"./components/Route/AdminRoute\"\r\n\r\nimport './App.scss';\r\nimport Root from './components/Root/Root';\r\n\r\nexport default function App() {\r\n\t\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch({type : KEEP_SESSION})\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<PublicRoute exact path=\"/login\" component={Login}/>\r\n\t\t\t\t\t{/* <AdminRoute exact path=\"/admin\" component={Admin} /> */}\r\n                    {/* <PrivateRoute exact path=\"/profile\" component={Profile}/>\r\n                    <PrivateRoute path=\"/groups/:idGroup\" component={Home}/>\r\n                    <PrivateRoute path=\"/search/:filter/:query\" component={Search}/> */}\r\n\t\t\t\t\t<PrivateRoute path=\"/\" component={Root} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \r\n    SET_SESSION,\r\n    CLEAR_SESSION,\r\n    FETCHING_SESSION\r\n} from './sessionActionType'\r\nimport { \r\n    STORE_SOCKET,  \r\n    UPLOAD_IMAGE,\r\n} from '../../socketClient'\r\n\r\nconst initialState = {\r\n    user : null,\r\n    jwt : null,\r\n    isFetching : false,\r\n    socket: null\r\n}\r\n\r\nexport const sessionReducer = (state = initialState, action) => {\r\n   \r\n    switch(action.type){\r\n\r\n        case FETCHING_SESSION:\r\n            return {\r\n                ...state,\r\n                isFetching : true,\r\n                user : null,\r\n                jwt : null\r\n            }\r\n\r\n        case SET_SESSION:\r\n            return {\r\n                ...state,\r\n                user : action.payload.user,\r\n                jwt : action.payload.jwt,\r\n                isFetching : false\r\n            }\r\n\r\n        case UPLOAD_IMAGE:\r\n            return {\r\n                ...state,\r\n                user : action.payload.user,\r\n            }\r\n        \r\n        case STORE_SOCKET:\r\n            return {\r\n                ...state,\r\n                socket : action.payload.socket\r\n            }\r\n        \r\n        case CLEAR_SESSION:\r\n            return {\r\n                ...state,\r\n                user : null,\r\n                jwt : null,\r\n                isFetching : false,\r\n                socket : null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    SIGN_IN_START,\r\n    SIGN_IN_SUCCESS,\r\n    SIGN_IN_FAILURE\r\n} from \"./signinActionType\"\r\n\r\nconst initialState = {\r\n    isLoading : false,\r\n    error: null\r\n}\r\n\r\n\r\nexport const signinReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        case SIGN_IN_START:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                error : null\r\n            }\r\n        \r\n        case SIGN_IN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: null\r\n            }\r\n        \r\n            case SIGN_IN_FAILURE:\r\n                return {\r\n                    ...state,\r\n                    isLoading: false,\r\n                    error: action.payload.error.message\r\n                }\r\n\r\n        default: return state\r\n    }\r\n\r\n}","import { \r\n    LIST_GROUP_SUCCESS,\r\n    LIST_GROUP_FAILED,\r\n    SET_LOCATION_SUCCESS,\r\n    SET_LOCATION_FAILED,\r\n} from \"./groupActionType\"\r\n\r\nconst initialState = {\r\n    listGroup: [],\r\n    currentGroup: {\r\n        _id: null,\r\n        name: null,\r\n    },\r\n    location: null,\r\n    error: null,\r\n}\r\n\r\nexport const groupReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case LIST_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                listGroup: [...action.payload.listGroup]\r\n            }\r\n        \r\n        case LIST_GROUP_FAILED:\r\n            return {\r\n                ...state,\r\n                error: action.payload.error,\r\n            }\r\n            \r\n        case SET_LOCATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                location: action.payload.location,\r\n            }\r\n        \r\n        case SET_LOCATION_FAILED:\r\n            return {\r\n                ...state,\r\n                error: action.payload.error,\r\n            }\r\n        \r\n        default: \r\n            return state\r\n    }\r\n}","import { \r\n    REACT_POST,\r\n    COMMENT_POST,\r\n\r\n    FETCH_POST_START,\r\n    FETCH_POST_SUCCESS,\r\n    FETCH_POST_FAILURE,\r\n    PUSH_NEW_POST,\r\n    \r\n    FETCH_MORE_POST_START,\r\n    FETCH_MORE_POST_SUCCESS,\r\n    FETCH_MORE_POST_FAILURE\r\n} from './postActionType'\r\n\r\n/**  posts constructor -- hao le\r\n * posts : []\r\n        ....\r\n   }   \r\n */\r\n \r\nconst initialState = {\r\n    posts: [],\r\n    isFetching : false,\r\n    fetchError : null,\r\n    skip: 0\r\n}\r\n\r\nexport const postReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        case FETCH_POST_START:\r\n            console.log(\"fetching\")\r\n            return {\r\n                ...state,\r\n                isFetching : true,\r\n                fetchError : null\r\n            }\r\n        \r\n        case FETCH_POST_SUCCESS:\r\n            console.log(\"fetch ok\", action.payload.posts)\r\n            const sortedPost = action.payload.posts.sort((a, b) => Date.parse(b.updatedAt) - Date.parse(a.updatedAt))\r\n            return {\r\n                ...state,\r\n                isFetching : false,\r\n                fetchError : null,\r\n                skip : state.posts.length + sortedPost.length,\r\n                posts : [...sortedPost],\r\n                // posts : [...sortedPost, ...state.posts],\r\n            }\r\n\r\n        case FETCH_POST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isFetching : false,\r\n                fetchError : action.payload.error.message,\r\n                skip : state.posts.length\r\n            }\r\n\r\n        case PUSH_NEW_POST:\r\n            const { post } = action.payload.post;\r\n            console.log(post)\r\n            console.log([post, ...state.posts])\r\n            return {\r\n                ...state,\r\n                skip : state.posts.length + 1,\r\n                posts : [post, ...state.posts],\r\n            }\r\n        \r\n    //////////////////////////////////////\r\n        case FETCH_MORE_POST_START:\r\n            return {\r\n                ...state,\r\n                isFetching : true,\r\n                fetchError : null,\r\n            }\r\n\r\n        case REACT_POST:\r\n            const { reactedPost } = action.payload\r\n            console.log(\"REACT_POST\",  reactedPost )\r\n            const updatedPosts = [...state.posts.map(post => reactedPost._id === post._id? reactedPost: post)]\r\n            return {\r\n                ...state,\r\n                posts: [...updatedPosts]\r\n            }\r\n\r\n        // case COMMENT_POST:\r\n        //     const { comment } = action.payload\r\n        //     console.log(\"COMMENT_POST\",  comment )\r\n        //     return {\r\n        //         ...state,\r\n        //         posts: [...state.posts.map(post => comment.belongToPost === post._id? post.comments : post )]\r\n        //     }\r\n\r\n        case FETCH_MORE_POST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching : false,\r\n                fetchError : null,\r\n                skip : state.posts.length + action.payload.posts.length,\r\n                posts : [...state.posts, ...action.payload.posts],\r\n            }\r\n        \r\n        case FETCH_MORE_POST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                fetchError: action.payload.error.message\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    PUSH_ERROR,\r\n    CLEAR_ERROR\r\n} from \"./errorActionType\"\r\n\r\nconst initialState = {\r\n    content : null\r\n}\r\n\r\nexport const errorReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        case PUSH_ERROR:\r\n            return {\r\n                content : action.payload.error.message\r\n            }\r\n\r\n        case CLEAR_ERROR:\r\n            return {\r\n                content : null\r\n            }\r\n\r\n        default: return state\r\n\r\n    }\r\n}","import { PUSH_MESS, CLEAR_MESS } from \"./notificationActionType\"\r\nconst initialState = {\r\n    content : null\r\n}\r\n\r\nexport const messReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type){\r\n\r\n        case PUSH_MESS:\r\n            return {\r\n                content : action.payload.mess\r\n            }\r\n        \r\n        case CLEAR_MESS:\r\n            return {\r\n                content : null\r\n            }\r\n\r\n        default: return state\r\n    }\r\n\r\n} ","import { \r\n    SEARCH_START,\r\n    SEARCH_FAILURE,\r\n    SEARCH_SUCCESS,\r\n\r\n    SEARCH_POSTS,\r\n    SEARCH_PEOPLE,\r\n    SEARCH_GROUPS,\r\n\r\n} from './searchActionType'\r\n\r\nconst initialState = {\r\n    results: {\r\n        posts: [],\r\n        groups: [],\r\n        people: [],\r\n    },\r\n    isFetching : false,\r\n    fetchError : null,\r\n    skip: 0\r\n}\r\n\r\nexport const searchReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        case SEARCH_START:\r\n            console.log(\"fetching\")\r\n            return {\r\n                ...state,\r\n                isFetching : true,\r\n                fetchError : null,\r\n            }\r\n\r\n        case SEARCH_GROUPS:\r\n            return {\r\n                ...state,\r\n                isFetching : false,\r\n                fetchError : null,\r\n                results: {\r\n                    ...state.results,\r\n                    groups: [ ...action.payload.groups ],\r\n                }\r\n            }\r\n\r\n        case SEARCH_POSTS:\r\n            return {\r\n                ...state,\r\n                isFetching : false,\r\n                fetchError : null,\r\n                results: {\r\n                    ...state.results,\r\n                    posts: [ ...action.payload.posts ],\r\n                }\r\n            }\r\n\r\n        case SEARCH_PEOPLE:\r\n            return {\r\n                ...state,\r\n                isFetching : false,\r\n                fetchError : null,\r\n                results: {\r\n                    ...state.results,\r\n                    people: [ ...action.payload.people ],\r\n                }\r\n            }\r\n            \r\n        case SEARCH_FAILURE:\r\n            return {\r\n                ...state,\r\n                isFetching : false,\r\n                fetchError : action.payload.error,\r\n                \r\n            }\r\n            \r\n        case SEARCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching : false,\r\n                fetchError : null,\r\n                results: {\r\n                    ...state,\r\n                    posts: action.payload.posts? [...action.payload.posts] : [...state.results.posts],\r\n                    groups: action.payload.groups? [...action.payload.groups] : [...state.results.groups],\r\n                    people: action.payload.people? [...action.payload.people] : [...state.results.people],\r\n                }\r\n                \r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import axios from \"axios\"\r\n\r\nexport default axios.create({\r\n    baseURL : process.env.REACT_APP_SERVER_URL,\r\n    headers : {\r\n        \"Content-type\" : \"application/json\"\r\n    }\r\n})","import { call, put, takeEvery, select, takeLatest } from 'redux-saga/effects'\r\nimport axios from '../utils/axios.manual'\r\n\r\nimport {\r\n    SET_SESSION,\r\n    CLEAR_SESSION,\r\n    KEEP_SESSION,\r\n    FETCHING_SESSION\r\n} from '../redux/session/sessionActionType'\r\n\r\n\r\nimport { SIGN_OUT } from \"../redux/signin/signinActionType\"\r\n\r\nfunction* workerClearSession(action){\r\n    try {\r\n        \r\n        yield call({\r\n            context: localStorage,\r\n            fn: localStorage.removeItem\r\n        }, \"ACCESS_TOKEN\")\r\n\r\n        yield put({ type : CLEAR_SESSION })\r\n\r\n    } catch (error) {\r\n        console.log(error)        \r\n    }\r\n}\r\n\r\nfunction* workerFetchSession(action){\r\n    try {\r\n        \r\n        yield put({ type : FETCHING_SESSION })\r\n\r\n        const jwt = yield call({\r\n            context : localStorage,\r\n            fn: localStorage.getItem\r\n        }, \"ACCESS_TOKEN\")\r\n\r\n        if(!jwt) throw new Error(\"No jwt for your old session\")\r\n\r\n        const response  = yield axios.post(\"/auths/keep-session\", { jwt })\r\n        if(response.data.error) throw response.data.error\r\n\r\n        yield put({\r\n            type : SET_SESSION,\r\n            payload : { ...response.data }\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        yield put({ type : SIGN_OUT })\r\n    }\r\n}\r\n\r\nexport function* watchSession(){ \r\n    yield takeLatest(SIGN_OUT, workerClearSession)\r\n    yield takeLatest(KEEP_SESSION, workerFetchSession)\r\n}\r\n","import { call, put, takeEvery, select, takeLatest } from 'redux-saga/effects'\r\nimport axios from '../utils/axios.manual'\r\n\r\nimport {  \r\n    SIGN_IN,\r\n    SIGN_IN_GOOGLE,\r\n    SIGN_IN_START,\r\n    SIGN_IN_SUCCESS,\r\n    SIGN_IN_FAILURE\r\n} from \"../redux/signin/signinActionType\"\r\n\r\nimport {\r\n    SET_SESSION\r\n} from \"../redux/session/sessionActionType\"\r\n\r\nfunction* workerSigninLocal(action){\r\n    try {\r\n        yield put({ type : SIGN_IN_START })\r\n        const { username, password } = action.payload\r\n        if(!username && !password) throw new Error(\"Fields are lack!\")\r\n        \r\n        const response = yield axios.post(\"/auths/login\", {\r\n            username, \r\n            password\r\n        })\r\n\r\n        console.log(response.data)\r\n        if(response.data.error) throw response.data.error\r\n\r\n        const { user, jwt } = response.data\r\n        //luu jwt vao localStorage\r\n        yield call({\r\n            context : localStorage,\r\n            fn: localStorage.setItem\r\n        }, \"ACCESS_TOKEN\" , jwt)\r\n\r\n        // luu user va jwt vao redux store\r\n        yield put({\r\n            type : SET_SESSION,\r\n            payload : {\r\n                user,\r\n                jwt\r\n            }\r\n        })\r\n\r\n        yield put({ type : SIGN_IN_SUCCESS })\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        yield put({ \r\n            type : SIGN_IN_FAILURE,\r\n            payload : {\r\n                error\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n\r\nfunction* workerSigninGoogle(action){\r\n    try {\r\n        yield put({ type: SIGN_IN_START })\r\n        if(!action.payload.user) throw new Error(\"Login with Google failed\")\r\n\r\n        const { name, email, imageUrl } = action.payload.user\r\n        const response = yield axios.post(\"/auths/login\",{\r\n            name,\r\n            email,\r\n            imageUrl\r\n        })\r\n\r\n        console.log(response.data)\r\n        if(response.data.error) throw response.data.error\r\n\r\n\r\n        const { user, jwt } = response.data\r\n        //luu jwt vao localStorage\r\n        yield call({\r\n            context : localStorage,\r\n            fn: localStorage.setItem\r\n        }, \"ACCESS_TOKEN\" ,jwt)\r\n\r\n        // luu user va jwt vao redux store\r\n        yield put({\r\n            type : SET_SESSION,\r\n            payload : {\r\n                user,\r\n                jwt\r\n            }\r\n        })\r\n\r\n        yield put({ type : SIGN_IN_SUCCESS })\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        yield put({\r\n            type : SIGN_IN_FAILURE,\r\n            payload : {\r\n                error\r\n            }\r\n        })        \r\n    }\r\n}\r\n\r\nexport function* watchSignin(action){\r\n    yield takeLatest(SIGN_IN, workerSigninLocal)\r\n    yield takeLatest(SIGN_IN_GOOGLE, workerSigninGoogle)\r\n}","import { call, put, takeEvery, select, takeLatest } from 'redux-saga/effects'\r\nimport axios from '../utils/axios.manual'\r\n\r\nimport {  \r\n    LIST_GROUP,\r\n    LIST_GROUP_FAILED,\r\n    LIST_GROUP_SUCCESS,\r\n    SET_GROUP,\r\n    UNSET_GROUP,\r\n    // SET_GROUP_FAILED,\r\n    // SET_GROUP_SUCCESS,\r\n\r\n} from \"../redux/group/groupActionType\"\r\n\r\nfunction* workerListGroup(action){\r\n    try {\r\n        \r\n        const response = yield axios.get(\"/groups/\")\r\n        if (response.data.code === 200) {\r\n            \r\n            const groups = response.data.data.map(group => {\r\n                return {\r\n                    _id: group._id,\r\n                    name: group.name,\r\n                }\r\n            })\r\n            \r\n            yield put({ type: LIST_GROUP_SUCCESS, payload: { listGroup : groups }})\r\n            \r\n        }\r\n        else {throw new Error(response.data.error)}\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        yield put({ \r\n            type : LIST_GROUP_FAILED,\r\n            payload : {\r\n                error\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// function* workerSetGroup(action){\r\n//     try {\r\n\r\n//         const { currentGroup } = action.payload\r\n\r\n//         yield put({ type: SET_GROUP_SUCCESS, payload: { currentGroup }})\r\n        \r\n//     } catch (error) {\r\n//         console.log(error)\r\n//         yield put({ \r\n//             type : SET_GROUP_FAILED,\r\n//             payload : {\r\n//                 error\r\n//             }\r\n//         })\r\n//     }\r\n\r\n// }\r\n\r\nexport function* watchGroups(action){\r\n    yield takeEvery(LIST_GROUP, workerListGroup)\r\n    // yield takeEvery(SET_GROUP, workerSetGroup)\r\n}","import { all } from 'redux-saga/effects'\r\n\r\nimport { watchSession } from './sessionSaga'\r\nimport { watchSignin } from \"./signinSaga\"\r\nimport { watchGroups } from \"./groupSaga\"\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        watchSession(),\r\n        watchSignin(),\r\n        watchGroups(),\r\n    ])\r\n}","import {\r\n    createStore,\r\n    applyMiddleware,\r\n    combineReducers,\r\n} from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport { sessionReducer } from \"./session/sessionReducer\"\r\nimport { signinReducer } from \"./signin/signinReducer\"\r\nimport { groupReducer } from \"./group/groupReducer\"\r\nimport { postReducer } from \"./post/postReducer\"\r\nimport { errorReducer } from \"./error/errorReducer\"\r\nimport { messReducer } from \"./notification/notificationReducer\"\r\nimport { searchReducer } from \"./search/searchReducer\"\r\n\r\nimport rootSaga from \"../saga/rootSaga\"\r\nimport { socketMiddleware } from \"../socketClient\"\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst rootReducer = combineReducers({\r\n    session : sessionReducer,\r\n    signin : signinReducer,\r\n    groups: groupReducer,          \r\n    posts : postReducer,\r\n    error : errorReducer,\r\n    mess : messReducer,\r\n    search: searchReducer,\r\n})\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(socketMiddleware, sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\n// class MyComponent extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.wrapper = React.createRef();\r\n//   }\r\n//   render() {\r\n//     return <div ref={this.wrapper}><App /></div>;\r\n//   }\r\n// }\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <MyComponent/> */}\r\n\r\n      <App />\r\n    </Provider>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}